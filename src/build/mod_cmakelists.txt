execute_process(
  COMMAND git rev-parse HEAD
  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
  OUTPUT_VARIABLE GIT_COMMIT_HASH
  OUTPUT_STRIP_TRAILING_WHITESPACE
)
execute_process(
  COMMAND mkdir -p /home/taeyeon/research/CFGDiff/build_output/libarchive/libarchive-bcs-${GIT_COMMIT_HASH}
)
set (CFG_DIRECTORY /home/taeyeon/research/CFGDiff/build_output/libarchive/libarchive-bcs-${GIT_COMMIT_HASH})
foreach(SRC ${libarchive_SOURCES})
  string(REGEX MATCH "\\.c$" IS_C_FILE "${SRC}")
  if (IS_C_FILE)
      get_filename_component(SRC_NAME ${SRC} NAME)
      set(BC_FILE "${CMAKE_CURRENT_BINARY_DIR}/${SRC_NAME}.bc")
      # Skip if already handled
      list(FIND BC_FILES ${BC_FILE} _bc_index)
      if(_bc_index EQUAL -1)
          add_custom_command(
              OUTPUT ${BC_FILE}
              COMMAND clang -emit-llvm -c ${SRC}
                      -I/home/taeyeon/tools/libarchive
                      -I/usr/include/x86_64-linux-gnu
                      -I/home/taeyeon/tools/llvm-project/build/lib/clang/21/include
                      -I/usr/local/include
                      -I/usr/include
                      -o ${BC_FILE}
                      -DHAVE_CONFIG_H
                      -D__LIBARCHIVE_BUILD
                      -D__LIBARCHIVE_CONFIG_H_INCLUDED
                      -D_GNU_SOURCE
              COMMAND mv ${BC_FILE} ${CFG_DIRECTORY}/${SRC_NAME}.bc
              DEPENDS ${SRC} ${libarchive_SOURCES} ${include_HEADERS}
              VERBATIM
          )
          list(APPEND BC_FILES ${BC_FILE})
      endif()
    endif()
  endforeach()
add_custom_target(build_bc ALL DEPENDS ${BC_FILES})