
./libcrypto_c42165b5:	file format elf64-x86-64

Disassembly of section .text:

00000000000b4220 <AES_cbc_encrypt>:
   b4220:      	endbr64
   b4224:      	cmp	rdx, 0x0
   b4228:      	je	 <L0>
   b422e:      	pushfq
   b422f:      	push	rbx
   b4230:      	push	rbp
   b4231:      	push	r12
   b4233:      	push	r13
   b4235:      	push	r14
   b4237:      	push	r15
   b4239:      	cld
   b423a:      	mov	r9d, r9d
   b423d:      	lea	r14,  <asm_AES_cbc_encrypt+0x5a0>
   b4244:      	lea	r10,  <asm_AES_cbc_encrypt+0x11e0>
   b424b:      	cmp	r9, 0x0
   b424f:      	cmove	r14, r10
   b4253:      	mov	r10d, dword ptr  <OPENSSL_ia32cap_P>
   b425a:      	cmp	rdx, 0x200
   b4261:      	jb	 <L1>
   b4267:      	test	rdx, 0xf
   b426e:      	jne	 <L1>
   b4274:      	bt	r10d, 0x1c
   b4279:      	jb	 <L1>
   b427f:      	lea	r15, [rsp - 0x150]
   b4287:      	and	r15, -0x40
   b428b:      	mov	r10, r14
   b428e:      	lea	r11, [r14 + 0x900]
   b4295:      	mov	r12, r15
   b4298:      	and	r10, 0xfff
   b429f:      	and	r11, 0xfff
   b42a6:      	and	r12, 0xfff
   b42ad:      	cmp	r12, r11
   b42b0:      	jb	 <L2>
   b42b2:      	sub	r12, r11
   b42b5:      	sub	r15, r12
   b42b8:      	jmp	 <L3>
<L2>:
   b42ba:      	sub	r12, r10
   b42bd:      	and	r12, 0xfff
   b42c4:      	add	r12, 0x140
   b42cb:      	sub	r15, r12
   b42ce:      	nop
<L3>:
   b42d0:      	xchg	r15, rsp
   b42d3:      	mov	qword ptr [rsp + 0x10], r15
   b42d8:      	mov	qword ptr [rsp + 0x18], rdi
   b42dd:      	mov	qword ptr [rsp + 0x20], rsi
   b42e2:      	mov	qword ptr [rsp + 0x28], rdx
   b42e7:      	mov	qword ptr [rsp + 0x30], rcx
   b42ec:      	mov	qword ptr [rsp + 0x38], r8
   b42f1:      	mov	dword ptr [rsp + 0x140], 0x0
   b42fc:      	mov	rbp, r8
   b42ff:      	mov	rbx, r9
   b4302:      	mov	r9, rsi
   b4305:      	mov	r8, rdi
   b4308:      	mov	r15, rcx
   b430b:      	mov	eax, dword ptr [r15 + 0xf0]
   b4312:      	mov	r10, r15
   b4315:      	sub	r10, r14
   b4318:      	and	r10, 0xfff
   b431f:      	cmp	r10, 0x900
   b4326:      	jb	 <L4>
   b4328:      	cmp	r10, 0xf08
   b432f:      	jb	 <L5>
   b4331:      	nop	dword ptr [rax]
<L4>:
   b4334:      	mov	rsi, r15
   b4337:      	lea	rdi, [rsp + 0x50]
   b433c:      	lea	r15, [rsp + 0x50]
   b4341:      	mov	ecx, 0x1e
   b4346:      	rep		movsq	qword ptr es:[rdi], qword ptr [rsi]
   b4349:      	nop
   b434a:      	mov	dword ptr [rdi], eax
<L5>:
   b434c:      	mov	qword ptr [rsp], r15
   b4350:      	mov	ecx, 0x12
   b4355:      	nop	dword ptr [rax]
<L6>:
   b4358:      	mov	r10, qword ptr [r14]
   b435b:      	mov	r11, qword ptr [r14 + 0x20]
   b435f:      	mov	r12, qword ptr [r14 + 0x40]
   b4363:      	mov	r13, qword ptr [r14 + 0x60]
   b4367:      	lea	r14, [r14 + 0x80]
   b436e:      	sub	ecx, 0x1
   b4371:      	jne	 <L6>
   b4373:      	lea	r14, [r14 - 0x900]
   b437a:      	cmp	rbx, 0x0
   b437e:      	je	 <L7>
   b4384:      	mov	eax, dword ptr [rbp]
   b4387:      	mov	ebx, dword ptr [rbp + 0x4]
   b438a:      	mov	ecx, dword ptr [rbp + 0x8]
   b438d:      	mov	edx, dword ptr [rbp + 0xc]
<L8>:
   b4390:      	xor	eax, dword ptr [r8]
   b4393:      	xor	ebx, dword ptr [r8 + 0x4]
   b4397:      	xor	ecx, dword ptr [r8 + 0x8]
   b439b:      	xor	edx, dword ptr [r8 + 0xc]
   b439f:      	mov	r15, qword ptr [rsp]
   b43a3:      	mov	qword ptr [rsp + 0x18], r8
   b43a8:      	call	 <_x86_64_AES_encrypt>
   b43ad:      	mov	r8, qword ptr [rsp + 0x18]
   b43b2:      	mov	r10, qword ptr [rsp + 0x28]
   b43b7:      	mov	dword ptr [r9], eax
   b43ba:      	mov	dword ptr [r9 + 0x4], ebx
   b43be:      	mov	dword ptr [r9 + 0x8], ecx
   b43c2:      	mov	dword ptr [r9 + 0xc], edx
   b43c6:      	lea	r8, [r8 + 0x10]
   b43ca:      	lea	r9, [r9 + 0x10]
   b43ce:      	sub	r10, 0x10
   b43d2:      	test	r10, -0x10
   b43d9:      	mov	qword ptr [rsp + 0x28], r10
   b43de:      	jne	 <L8>
   b43e0:      	mov	rbp, qword ptr [rsp + 0x38]
   b43e5:      	mov	dword ptr [rbp], eax
   b43e8:      	mov	dword ptr [rbp + 0x4], ebx
   b43eb:      	mov	dword ptr [rbp + 0x8], ecx
   b43ee:      	mov	dword ptr [rbp + 0xc], edx
   b43f1:      	jmp	 <L9>
   b43f6:      	nop	word ptr cs:[rax + rax]
<L7>:
   b4400:      	cmp	r9, r8
   b4403:      	je	 <L10>
   b4409:      	mov	qword ptr [rsp + 0x40], rbp
   b440e:      	nop
<L11>:
   b4410:      	mov	eax, dword ptr [r8]
   b4413:      	mov	ebx, dword ptr [r8 + 0x4]
   b4417:      	mov	ecx, dword ptr [r8 + 0x8]
   b441b:      	mov	edx, dword ptr [r8 + 0xc]
   b441f:      	mov	r15, qword ptr [rsp]
   b4423:      	mov	qword ptr [rsp + 0x18], r8
   b4428:      	call	 <_x86_64_AES_decrypt>
   b442d:      	mov	rbp, qword ptr [rsp + 0x40]
   b4432:      	mov	r8, qword ptr [rsp + 0x18]
   b4437:      	mov	r10, qword ptr [rsp + 0x28]
   b443c:      	xor	eax, dword ptr [rbp]
   b443f:      	xor	ebx, dword ptr [rbp + 0x4]
   b4442:      	xor	ecx, dword ptr [rbp + 0x8]
   b4445:      	xor	edx, dword ptr [rbp + 0xc]
   b4448:      	mov	rbp, r8
   b444b:      	sub	r10, 0x10
   b444f:      	mov	qword ptr [rsp + 0x28], r10
   b4454:      	mov	qword ptr [rsp + 0x40], rbp
   b4459:      	mov	dword ptr [r9], eax
   b445c:      	mov	dword ptr [r9 + 0x4], ebx
   b4460:      	mov	dword ptr [r9 + 0x8], ecx
   b4464:      	mov	dword ptr [r9 + 0xc], edx
   b4468:      	lea	r8, [r8 + 0x10]
   b446c:      	lea	r9, [r9 + 0x10]
   b4470:      	jne	 <L11>
   b4472:      	mov	r12, qword ptr [rsp + 0x38]
   b4477:      	mov	r10, qword ptr [rbp]
   b447b:      	mov	r11, qword ptr [rbp + 0x8]
   b447f:      	mov	qword ptr [r12], r10
   b4483:      	mov	qword ptr [r12 + 0x8], r11
   b4488:      	jmp	 <L9>
   b448d:      	nop	dword ptr [rax]
<L10>:
   b4490:      	mov	r10, qword ptr [rbp]
   b4494:      	mov	r11, qword ptr [rbp + 0x8]
   b4498:      	mov	qword ptr [rsp + 0x40], r10
   b449d:      	mov	qword ptr [rsp + 0x48], r11
   b44a2:      	nop
<L13>:
   b44a4:      	mov	eax, dword ptr [r8]
   b44a7:      	mov	ebx, dword ptr [r8 + 0x4]
   b44ab:      	mov	ecx, dword ptr [r8 + 0x8]
   b44af:      	mov	edx, dword ptr [r8 + 0xc]
   b44b3:      	mov	r15, qword ptr [rsp]
   b44b7:      	mov	qword ptr [rsp + 0x18], r8
   b44bc:      	call	 <_x86_64_AES_decrypt>
   b44c1:      	mov	r8, qword ptr [rsp + 0x18]
   b44c6:      	mov	r10, qword ptr [rsp + 0x28]
   b44cb:      	xor	eax, dword ptr [rsp + 0x40]
   b44cf:      	xor	ebx, dword ptr [rsp + 0x44]
   b44d3:      	xor	ecx, dword ptr [rsp + 0x48]
   b44d7:      	xor	edx, dword ptr [rsp + 0x4c]
   b44db:      	mov	r11, qword ptr [r8]
   b44de:      	mov	r12, qword ptr [r8 + 0x8]
   b44e2:      	sub	r10, 0x10
   b44e6:      	je	 <L12>
   b44e8:      	mov	qword ptr [rsp + 0x40], r11
   b44ed:      	mov	qword ptr [rsp + 0x48], r12
   b44f2:      	mov	dword ptr [r9], eax
   b44f5:      	mov	dword ptr [r9 + 0x4], ebx
   b44f9:      	mov	dword ptr [r9 + 0x8], ecx
   b44fd:      	mov	dword ptr [r9 + 0xc], edx
   b4501:      	lea	r8, [r8 + 0x10]
   b4505:      	lea	r9, [r9 + 0x10]
   b4509:      	mov	qword ptr [rsp + 0x28], r10
   b450e:      	jmp	 <L13>
<L12>:
   b4510:      	mov	rdi, qword ptr [rsp + 0x38]
   b4515:      	mov	qword ptr [rdi], r11
   b4518:      	mov	qword ptr [rdi + 0x8], r12
   b451c:      	mov	dword ptr [r9], eax
   b451f:      	mov	dword ptr [r9 + 0x4], ebx
   b4523:      	mov	dword ptr [r9 + 0x8], ecx
   b4527:      	mov	dword ptr [r9 + 0xc], edx
   b452b:      	nop
<L9>:
   b452c:      	cmp	dword ptr [rsp + 0x140], 0x0
   b4534:      	lea	rdi, [rsp + 0x50]
   b4539:      	je	 <L14>
   b453f:      	mov	ecx, 0x1e
   b4544:      	xor	rax, rax
   b4547:      	rep		stosq	qword ptr es:[rdi], rax
   b454a:      	nop
   b454b:      	jmp	 <L14>
<L1>:
   b4550:      	lea	rbp, [rsp - 0x58]
   b4555:      	and	rbp, -0x40
   b4559:      	lea	r10, [rcx - 0x97]
   b4560:      	sub	r10, rbp
   b4563:      	neg	r10
   b4566:      	and	r10, 0x3c0
   b456d:      	sub	rbp, r10
   b4570:      	xchg	rbp, rsp
   b4573:      	mov	qword ptr [rsp + 0x10], rbp
   b4578:      	mov	qword ptr [rsp + 0x38], r8
   b457d:      	mov	rbp, r8
   b4580:      	mov	rbx, r9
   b4583:      	mov	r9, rsi
   b4586:      	mov	r8, rdi
   b4589:      	mov	r15, rcx
   b458c:      	mov	r10, rdx
   b458f:      	mov	eax, dword ptr [r15 + 0xf0]
   b4596:      	mov	qword ptr [rsp], r15
   b459a:      	shl	eax, 0x4
   b459d:      	lea	rax, [r15 + rax]
   b45a1:      	mov	qword ptr [rsp + 0x8], rax
   b45a6:      	lea	r14, [r14 + 0x800]
   b45ad:      	lea	rax, [rsp + 0x2f8]
   b45b5:      	sub	rax, r14
   b45b8:      	and	rax, 0x300
   b45be:      	lea	r14, [r14 + rax]
   b45c2:      	cmp	rbx, 0x0
   b45c6:      	je	 <L15>
   b45cc:      	test	r10, -0x10
   b45d3:      	mov	eax, dword ptr [rbp]
   b45d6:      	mov	ebx, dword ptr [rbp + 0x4]
   b45d9:      	mov	ecx, dword ptr [rbp + 0x8]
   b45dc:      	mov	edx, dword ptr [rbp + 0xc]
   b45df:      	je	 <L16>
   b45e1:      	nop	dword ptr [rax]
<L17>:
   b45e4:      	xor	eax, dword ptr [r8]
   b45e7:      	xor	ebx, dword ptr [r8 + 0x4]
   b45eb:      	xor	ecx, dword ptr [r8 + 0x8]
   b45ef:      	xor	edx, dword ptr [r8 + 0xc]
   b45f3:      	mov	r15, qword ptr [rsp]
   b45f7:      	mov	qword ptr [rsp + 0x18], r8
   b45fc:      	mov	qword ptr [rsp + 0x20], r9
   b4601:      	mov	qword ptr [rsp + 0x28], r10
   b4606:      	call	 <_x86_64_AES_encrypt_compact>
   b460b:      	mov	r8, qword ptr [rsp + 0x18]
   b4610:      	mov	r9, qword ptr [rsp + 0x20]
   b4615:      	mov	r10, qword ptr [rsp + 0x28]
   b461a:      	mov	dword ptr [r9], eax
   b461d:      	mov	dword ptr [r9 + 0x4], ebx
   b4621:      	mov	dword ptr [r9 + 0x8], ecx
   b4625:      	mov	dword ptr [r9 + 0xc], edx
   b4629:      	lea	r8, [r8 + 0x10]
   b462d:      	lea	r9, [r9 + 0x10]
   b4631:      	sub	r10, 0x10
   b4635:      	test	r10, -0x10
   b463c:      	jne	 <L17>
   b463e:      	test	r10, 0xf
   b4645:      	jne	 <L16>
   b4647:      	mov	rbp, qword ptr [rsp + 0x38]
   b464c:      	mov	dword ptr [rbp], eax
   b464f:      	mov	dword ptr [rbp + 0x4], ebx
   b4652:      	mov	dword ptr [rbp + 0x8], ecx
   b4655:      	mov	dword ptr [rbp + 0xc], edx
   b4658:      	jmp	 <L14>
   b465d:      	nop	dword ptr [rax]
<L16>:
   b4660:      	mov	r11, rax
   b4663:      	mov	r12, rcx
   b4666:      	mov	rcx, r10
   b4669:      	mov	rsi, r8
   b466c:      	mov	rdi, r9
   b466f:      	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
   b4671:      	nop
   b4673:      	mov	rcx, 0x10
   b467a:      	sub	rcx, r10
   b467d:      	xor	rax, rax
   b4680:      	rep		stosb	byte ptr es:[rdi], al
   b4682:      	nop
   b4684:      	mov	r8, r9
   b4687:      	mov	r10, 0x10
   b468e:      	mov	rax, r11
   b4691:      	mov	rcx, r12
   b4694:      	jmp	 <L17>
   b4699:      	nop	dword ptr [rax]
<L15>:
   b46a0:      	shr	rax, 0x3
   b46a4:      	add	r14, rax
   b46a7:      	mov	r11, qword ptr [rbp]
   b46ab:      	mov	r12, qword ptr [rbp + 0x8]
   b46af:      	mov	qword ptr [rsp + 0x40], r11
   b46b4:      	mov	qword ptr [rsp + 0x48], r12
   b46b9:      	nop	dword ptr [rax]
<L20>:
   b46bc:      	mov	eax, dword ptr [r8]
   b46bf:      	mov	ebx, dword ptr [r8 + 0x4]
   b46c3:      	mov	ecx, dword ptr [r8 + 0x8]
   b46c7:      	mov	edx, dword ptr [r8 + 0xc]
   b46cb:      	mov	r15, qword ptr [rsp]
   b46cf:      	mov	qword ptr [rsp + 0x18], r8
   b46d4:      	mov	qword ptr [rsp + 0x20], r9
   b46d9:      	mov	qword ptr [rsp + 0x28], r10
   b46de:      	call	 <_x86_64_AES_decrypt_compact>
   b46e3:      	mov	r8, qword ptr [rsp + 0x18]
   b46e8:      	mov	r9, qword ptr [rsp + 0x20]
   b46ed:      	mov	r10, qword ptr [rsp + 0x28]
   b46f2:      	xor	eax, dword ptr [rsp + 0x40]
   b46f6:      	xor	ebx, dword ptr [rsp + 0x44]
   b46fa:      	xor	ecx, dword ptr [rsp + 0x48]
   b46fe:      	xor	edx, dword ptr [rsp + 0x4c]
   b4702:      	mov	r11, qword ptr [r8]
   b4705:      	mov	r12, qword ptr [r8 + 0x8]
   b4709:      	sub	r10, 0x10
   b470d:      	jb	 <L18>
   b470f:      	je	 <L19>
   b4711:      	mov	qword ptr [rsp + 0x40], r11
   b4716:      	mov	qword ptr [rsp + 0x48], r12
   b471b:      	mov	dword ptr [r9], eax
   b471e:      	mov	dword ptr [r9 + 0x4], ebx
   b4722:      	mov	dword ptr [r9 + 0x8], ecx
   b4726:      	mov	dword ptr [r9 + 0xc], edx
   b472a:      	lea	r8, [r8 + 0x10]
   b472e:      	lea	r9, [r9 + 0x10]
   b4732:      	jmp	 <L20>
<L19>:
   b4734:      	mov	rdi, qword ptr [rsp + 0x38]
   b4739:      	mov	qword ptr [rdi], r11
   b473c:      	mov	qword ptr [rdi + 0x8], r12
   b4740:      	mov	dword ptr [r9], eax
   b4743:      	mov	dword ptr [r9 + 0x4], ebx
   b4747:      	mov	dword ptr [r9 + 0x8], ecx
   b474b:      	mov	dword ptr [r9 + 0xc], edx
   b474f:      	jmp	 <L14>
   b4751:      	nop	dword ptr [rax]
<L18>:
   b4754:      	mov	rdi, qword ptr [rsp + 0x38]
   b4759:      	mov	qword ptr [rdi], r11
   b475c:      	mov	qword ptr [rdi + 0x8], r12
   b4760:      	mov	dword ptr [rsp + 0x40], eax
   b4764:      	mov	dword ptr [rsp + 0x44], ebx
   b4768:      	mov	dword ptr [rsp + 0x48], ecx
   b476c:      	mov	dword ptr [rsp + 0x4c], edx
   b4770:      	mov	rdi, r9
   b4773:      	lea	rsi, [rsp + 0x40]
   b4778:      	lea	rcx, [r10 + 0x10]
   b477c:      	rep		movsb	byte ptr es:[rdi], byte ptr [rsi]
   b477e:      	nop
   b4780:      	jmp	 <L14>
   b4782:      	nop	word ptr cs:[rax + rax]
   b478c:      	nop	dword ptr [rax]
<L14>:
   b4790:      	mov	rsi, qword ptr [rsp + 0x10]
   b4795:      	mov	r15, qword ptr [rsi]
   b4798:      	mov	r14, qword ptr [rsi + 0x8]
   b479c:      	mov	r13, qword ptr [rsi + 0x10]
   b47a0:      	mov	r12, qword ptr [rsi + 0x18]
   b47a4:      	mov	rbp, qword ptr [rsi + 0x20]
   b47a8:      	mov	rbx, qword ptr [rsi + 0x28]
   b47ac:      	lea	rsp, [rsi + 0x30]
   b47b0:      	popfq
<L0>:
   b47b1:      	rep		ret
   b47b3:      	nop	word ptr cs:[rax + rax]
   b47bd:      	nop	dword ptr [rax]
   b47c0:      	<unknown>
   b47c3:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b47c4:      	<unknown>
   b47c7:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b47c8:      	clc
   b47c9:      	jl	 <L21>
   b47cb:      	test	al, bh
   b47cd:      	jl	 <L22>
   b47cf:      	test	dh, ch
   b47d1:      	ja	 <L23>
   b47d3:      	cdq
   b47d4:      	out	dx, al
   b47d5:      	ja	 <L24>
   b47d7:      	cdq
   b47d8:      	idiv	byte ptr [rbx + 0x7b]
   b47db:      	<unknown>
   b47dd:      	jnp	 <L25>
   b47df:      	<unknown>
   b47e1:      	repne		or	eax, 0xdf2f2ff
   b47e8:      	<unknown>
   b47e9:      	imul	ebp, dword ptr [rbx - 0x43], -0x2a
   b47ed:      	imul	ebp, dword ptr [rbx - 0x43], -0x22
   b47f1:      	outsd	dx, dword ptr [rsi]
   b47f2:      	outsd	dx, dword ptr [rsi]
   b47f3:      	mov	cl, -0x22
   b47f5:      	outsd	dx, dword ptr [rsi]
   b47f6:      	outsd	dx, dword ptr [rsi]
   b47f7:      	mov	cl, -0x6f
   b47f9:      	vandpd	ymm2, ymm7, ymmword ptr [rcx + 0x6054c5c5]
   b4801:      	xor	byte ptr [rax], dh
   b4803:      	push	rax
   b4804:      	<unknown>
   b4805:      	xor	byte ptr [rax], dh
   b4807:      	push	rax
<L27>:
   b4808:      	add	al, byte ptr [rcx]
   b480a:      	add	dword ptr [rbx], eax
   b480c:      	add	al, byte ptr [rcx]
   b480e:      	add	dword ptr [rbx], eax
   b4810:      	<unknown>
   b4811:      	addr32		test	eax, 0xa96767ce
   b4818:      	push	rsi
   b4819:      	sub	ebp, dword ptr [rbx]
   b481b:      	jge	 <L26>
   b481d:      	sub	ebp, dword ptr [rbx]
<L32>:
   b481f:      	jge	 <L27>
   b4821:      	<unknown>
   b4823:      	sbb	edi, esp
   b4825:      	<unknown>
   b4827:      	sbb	dword ptr [rbp - 0x4a9d2829], esi
   b482d:      	xlatb
   b482e:      	xlatb
   b482f:      	<unknown>
   b4834:      	stosq	qword ptr es:[rdi], rax
   b4836:      	stosd	dword ptr es:[rdi], eax
   b4837:      	out	0xec, al
   b4839:      	jbe	 <L28>
   b483b:      	<unknown>
   b483c:      	in	al, dx
   b483d:      	jbe	 <L29>
   b483f:      	<unknown>
   b4840:      	<unknown>
   b4844:      	<unknown>
   b4848:      	<unknown>
   b4849:      	<unknown>
<L23>:
   b484a:      	<unknown>
<L22>:
   b484b:      	popfq
   b484c:      	<unknown>
   b484d:      	<unknown>
<L24>:
   b484e:      	<unknown>
   b484f:      	popfq
   b4850:      	mov	ecx, ecx
   b4852:      	leave
   b4853:      	mov	ecx, ecx
   b4856:      	leave
   b4857:      	cli
   b4859:      	jge	 <L30>
   b485b:      	xchg	edi, edx
   b485d:      	jge	 <L31>
   b485f:      	xchg	ebp, edi
   b4861:      	cli
   b4862:      	cli
   b4863:      	adc	eax, 0x15fafaef
   b4868:      	mov	dl, 0x59
   b486a:      	pop	rcx
   b486b:      	jmp	 <L32>
   b486d:      	pop	rcx
   b486e:      	pop	rcx
   b486f:      	jmp	 <L33>
   b4871:      	leave
   b4874:      	mov	es, word ptr [rdi + 0x47]
   b4877:      	leave
   b4878:      	sti
<L35>:
   b4879:      	lock
   b487a:      	lock
   b487b:      	or	edi, ebx
<L36>:
   b487d:      	lock
   b487e:      	lock
   b487f:      	or	eax, dword ptr [rcx - 0x53]
   b4882:      	lodsd	eax, dword ptr [rsi]
   b4883:      	in	al, dx
   b4884:      	lodsd	eax, dword ptr [rsi]
   b4886:      	lodsd	eax, dword ptr [rsi]
   b4887:      	in	al, dx
   b4888:      	mov	bl, -0x2c
   b488a:      	<unknown>
   b488b:      	addr32		mov	bl, -0x2c
   b488e:      	<unknown>
   b488f:      	addr32		pop	rdi
   b4891:      	movabs	byte ptr [-0x50ba025d5da0025e], al
   b489a:      	scasd	eax, dword ptr es:[rdi]
   b489b:      	<unknown>
   b489c:      	scasd	eax, dword ptr es:[rdi]
   b489e:      	scasd	eax, dword ptr es:[rdi]
   b489f:      	<unknown>
   b48a0:      	and	ebx, dword ptr [rsp + 4*rbx - 0x6363dc41]
   b48a7:      	mov	edi, 0xf7a4a453
   b48ac:      	push	rbx
   b48ad:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b48ae:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b48af:      	mul	esp
<L28>:
   b48b1:      	jb	 <L34>
   b48b3:      	xchg	eax, esi
   b48b4:      	in	al, 0x72
   b48b6:      	jb	 <L24>
   b48b8:      	wait
   b48b9:      	rol	al, 0x5b
   b48bc:      	wait
   b48bd:      	rol	al, 0x5b
   b48c0:      	jne	 <L35>
   b48c2:      	mov	bh, -0x3e
   b48c4:      	jne	 <L36>
   b48c6:      	mov	bh, -0x3e
   b48c8:      	loope	 <L37>
   b48ca:      	std
   b48cb:      	sbb	al, -0x1f
   b48cd:      	std
   b48ce:      	std
   b48cf:      	sbb	al, 0x3d
   b48d1:      	xchg	eax, ebx
   b48d2:      	xchg	eax, ebx
   b48d3:      	scasb	al, byte ptr es:[rdi]
   b48d4:      	cmp	eax, 0x4cae9393
   b48d9:      	push	0x4c
   b48dd:      	push	0x6c
   b48e1:      	pop	rdx
   b48e4:      	insb	byte ptr es:[rdi], dx
   b48e5:      	pop	rdx
   b48e8:      	jle	 <L38>
   b48ea:      	<unknown>
   b48eb:      	jle	 <L39>
   b48ee:      	<unknown>
   b48ef:      	cmc
   b48f1:      	div	edi
   b48f3:      	add	dh, ch
   b48f5:      	div	edi
   b48f7:      	add	al, byte ptr [rbx - 0x7cb03334]
   b48fd:      	int3
   b48fe:      	int3
   b48ff:      	push	0x685c3434
   b4905:      	xor	al, 0x34
   b4907:      	pop	rsp
   b4908:      	push	rcx
   b4909:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b490a:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b490b:      	hlt
   b490c:      	push	rcx
   b490d:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b490e:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b490f:      	hlt
   b4910:      	shl	ebp
   b4912:      	in	eax, 0x34
   b4914:      	shl	ebp
   b4916:      	in	eax, 0x34
   b4918:      	stc
   b4919:      	<unknown>
   b491a:      	<unknown>
   b491b:      	or	cl, bh
   b491d:      	<unknown>
   b491e:      	<unknown>
   b491f:      	or	dl, ah
   b4921:      	jno	 <L40>
   b4923:      	xchg	eax, ebx
   b4924:      	loop	 <L41>
   b4926:      	jno	 <L42>
   b4928:      	stosd	dword ptr es:[rdi], eax
<L38>:
   b4929:      	fcomp	st(0)
   b492b:      	jae	 <L30>
<L39>:
   b492d:      	fcomp	st(0)
   b492f:      	jae	 <L43>
   b4931:      	xor	dword ptr [rcx], esi
   b4933:      	push	rbx
   b4934:      	<unknown>
   b493e:      	adc	eax, 0x404083f
   b4943:      	or	al, 0x8
   b4945:      	add	al, 0x4
   b4947:      	or	al, -0x6b
   b4949:      	mov	edi, 0xc7c79552
   b494f:      	push	rdx
   b4950:      	and	r12d, dword ptr [rbx]
   b4953:      	and	r12d, dword ptr gs:[rbx]
   b4957:      	popfq
   b4959:      	ret
   b495a:      	ret
   b495b:      	pop	rsi
   b495c:      	popfq
   b495d:      	ret
   b495e:      	ret
   b495f:      	pop	rsi
   b4960:      	xor	byte ptr [rax], bl
   b4962:      	sbb	byte ptr [rax], ch
   b4964:      	xor	byte ptr [rax], bl
   b4966:      	sbb	byte ptr [rax], ch
<L46>:
   b4968:      	<unknown>
   b4969:      	xchg	eax, esi
   b496a:      	xchg	eax, esi
   b496b:      	movabs	eax, dword ptr [0xf05050aa1969637]
   b4974:      	or	al, byte ptr  <OPENSSL_ia32cap_P+0xffffffff99f8b10f>
   b497a:      	<unknown>
   b497b:      	mov	ch, 0x2f
   b497d:      	<unknown>
   b497e:      	<unknown>
   b497f:      	mov	ch, 0xe
<L44>:
   b4981:      	<unknown>
   b4982:      	<unknown>
   b4983:      	or	dword ptr [rsi], ecx
   b4985:      	<unknown>
   b4986:      	<unknown>
   b4987:      	or	dword ptr [rdx + rdx], esp
   b498a:      	adc	dh, byte ptr [rsi]
   b498c:      	and	al, 0x12
   b498e:      	adc	dh, byte ptr [rsi]
   b4990:      	sbb	eax, dword ptr [rax - 0x7fe46480]
   b4996:      	sbb	byte ptr [rbx + 0x3de2e2df], -0x21
   b499d:      	loop	 <L44>
   b499f:      	cmp	eax, 0x26ebebcd
   b49a4:      	int	0xeb
   b49a6:      	jmp	 <L45>
   b49a8:      	<unknown>
   b49aa:      	<unknown>
   b49ab:      	imul	ecx, dword ptr [rsi + 0x27], 0xb27f6927
   b49b2:      	mov	dl, -0x33
   b49b4:      	jg	 <L46>
   b49b6:      	mov	dl, -0x33
   b49b8:      	<unknown>
   b49b9:      	jne	 <L47>
   b49bb:      	lahf
   b49bc:      	<unknown>
   b49bd:      	jne	 <L48>
   b49bf:      	lahf
   b49c0:      	adc	cl, byte ptr [rcx]
   b49c2:      	or	dword ptr [rbx], ebx
   b49c4:      	adc	cl, byte ptr [rcx]
   b49c6:      	or	dword ptr [rbx], ebx
   b49c8:      	sbb	eax, 0x1d9e8383
<L50>:
   b49cd:      	add	dword ptr [rbx + 0x2c2c589e], 0x74
   b49d4:      	pop	rax
   b49d5:      	sub	al, 0x2c
   b49d7:      	je	 <L49>
   b49d9:      	sbb	bl, byte ptr [rdx]
   b49db:      	xor	al, 0x1a
   b49de:      	sbb	ch, byte ptr [rsi]
   b49e0:      	sbb	ebx, dword ptr ss:[rbx]
   b49e3:      	sub	eax, 0x2d1b1b36
   b49e8:      	fsubr	qword ptr [rsi + 0x6e]
   b49eb:      	mov	dl, -0x24
   b49ed:      	outsb	dx, byte ptr [rsi]
   b49ee:      	outsb	dx, byte ptr [rsi]
   b49ef:      	mov	dl, -0x4c
   b49f1:      	pop	rdx
   b49f2:      	pop	rdx
   b49f3:      	out	dx, al
   b49f4:      	mov	ah, 0x5a
   b49f6:      	pop	rdx
   b49f7:      	out	dx, al
   b49f8:      	pop	rbx
   b49f9:      	movabs	al, byte ptr [0x52a4fba0a05bfba0]
   b4a02:      	push	rdx
   b4a03:      	mul	byte ptr [rdx + 2*rdx + 0x3b76f652]
   b4a0a:      	cmp	ecx, dword ptr [rbp + 0x76]
<L49>:
   b4a0d:      	cmp	edi, dword ptr [rbx]
   b4a0f:      	mov	r15b, -0x2a
   b4a12:      	<unknown>
   b4a13:      	<unknown>
   b4a14:      	mov	bh, -0x2a
   b4a16:      	<unknown>
   b4a17:      	<unknown>
   b4a18:      	jge	 <L50>
   b4a1a:      	mov	bl, -0x32
   b4a1c:      	jge	 <L51>
   b4a1e:      	mov	bl, -0x32
   b4a20:      	push	rdx
   b4a21:      	sub	dword ptr [rcx], ebp
<L60>:
   b4a23:      	jnp	 <L52>
   b4a25:      	sub	dword ptr [rcx], ebp
<L61>:
   b4a27:      	jnp	 <L53>
   b4a29:      	jrcxz	 <L54>
   b4a2b:      	fucom	st(3)
   b4a2e:      	jrcxz	 <L55>
<L47>:
   b4a30:      	pop	rsi
   b4a31:      	<unknown>
   b4a32:      	<unknown>
   b4a33:      	jno	 <L56>
   b4a35:      	<unknown>
   b4a36:      	<unknown>
   b4a37:      	jno	 <L57>
   b4a39:      	test	byte ptr [rdi + 4*rdx - 0x687b7bed], al
   b4a40:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b4a41:      	push	rbx
   b4a42:      	push	rbx
   b4a43:      	cmc
   b4a44:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b4a45:      	push	rbx
   b4a46:      	push	rbx
   b4a47:      	cmc
   b4a48:      	mov	ecx, 0xb968d1d1
   b4a4d:      	rcl	ecx
   b4a4f:      	push	0x0
   b4a54:      	add	byte ptr [rax], al
   b4a56:      	add	byte ptr [rax], al
   b4a58:      	shr	ebp, 0xed
   b4a5b:      	sub	al, -0x3f
   b4a5d:      	in	eax, dx
   b4a5e:      	in	eax, dx
   b4a5f:      	sub	al, 0x40
   b4a61:      	and	byte ptr [rax], ah
   b4a63:      	<unknown>
   b4a64:      	and	byte ptr [rax], spl
   b4a67:      	<unknown>
   b4a68:      	jrcxz	 <L58>
<L59>:
   b4a6a:      	cld
   b4a6b:      	<unknown>
   b4a6c:      	jrcxz	 <L59>
<L55>:
   b4a6e:      	cld
   b4a6f:      	<unknown>
   b4a70:      	jns	 <L60>
   b4a72:      	mov	cl, -0x38
   b4a74:      	jns	 <L61>
   b4a76:      	mov	cl, -0x38
   b4a78:      	mov	dh, 0x5b
   b4a7a:      	pop	rbx
   b4a7b:      	in	eax, dx
   b4a7c:      	mov	dh, 0x5b
   b4a7e:      	pop	rbx
   b4a7f:      	in	eax, dx
   b4a80:      	<unknown>
   b4a81:      	push	0x6a
   b4a83:      	mov	esi, 0xbe6a6ad4
   b4a88:      	<unknown>
   b4a8a:      	retf
   b4a8b:      	<unknown>
   b4a8e:      	retf
   b4a8f:      	addr32		mov	esi, 0xbe67d9be
   b4a96:      	mov	esi, 0x393972d9
   b4a9b:      	jb	 <L62>
   b4a9e:      	cmp	dword ptr [rbx - 0x6c], ecx
   b4aa1:      	ficom	word ptr [rdx + 2*r9 + 0x4c98de4a]
   b4aaa:      	<unknown>
   b4aac:      	cwde
   b4aad:      	<unknown>
   b4ab0:      	mov	al, 0x58
   b4ab2:      	pop	rax
   b4ab3:      	call	 <OPENSSL_ia32cap_P+0xffffffffe821fbf8>
   b4ab8:      	test	edi, ecx
   b4aba:      	iretd
   b4abb:      	test	rdi, rcx
   b4abe:      	iretd
   b4abf:      	movabs	rbx, -0x3a942f2f44942f30
   b4ac9:      	out	dx, eax
   b4aca:      	out	dx, eax
   b4acb:      	sub	al, ch
   b4acd:      	out	dx, eax
   b4ace:      	out	dx, eax
   b4acf:      	sub	cl, byte ptr [rdi - 0x56]
   b4ad2:      	stosb	byte ptr es:[rdi], al
   b4ad3:      	in	eax, 0x4f
   b4ad5:      	stosb	byte ptr es:[rdi], al
   b4ad6:      	stosb	byte ptr es:[rdi], al
<L62>:
   b4ad7:      	in	eax, 0xed
   b4ad9:      	sti
   b4ada:      	sti
   b4adb:      	<unknown>
   b4adc:      	in	eax, dx
   b4add:      	sti
   b4ade:      	sti
   b4adf:      	<unknown>
   b4ae0:      	xchg	byte ptr [rbx + 0x43], al
<L63>:
   b4ae3:      	<unknown>
   b4ae6:      	<unknown>
   b4aea:      	xlatb
   b4aec:      	<unknown>
   b4aed:      	xlatb
   b4af0:      	xor	si, word ptr [rbx]
   b4af3:      	push	rbp
   b4af4:      	xor	si, word ptr [rbx]
   b4af7:      	push	rbp
   b4af8:      	adc	dword ptr [rbp - 0x7aee6b7b], eax
   b4afe:      	test	dword ptr [rdx + 4*rcx - 0x7530babb], edx
   b4b05:      	iretd
   b4b08:      	jmp	 <OPENSSL_ia32cap_P+0xffffffffe8da9d96>
   b4b0d:      	stc
   b4b0e:      	stc
   b4b0f:      	adc	byte ptr [rdx + rax], al
   b4b12:      	add	al, byte ptr [rsi]
   b4b14:      	add	al, 0x2
   b4b16:      	add	al, byte ptr [rsi]
   b4b18:      	<unknown>
   b4b1b:      	cmp	esi, 0xa0817f7f
   b4b21:      	push	rax
   b4b22:      	push	rax
   b4b23:      	lock
   b4b24:      	movabs	al, byte ptr [0x78443c3c78f05050]
   b4b2d:      	cmp	al, 0x3c
   b4b2f:      	and	eax, 0x25ba9f9f
   b4b35:      	lahf
   b4b36:      	lahf
   b4b37:      	mov	edx, 0xe3a8a84b
   b4b3c:      	test	al, -0x58
   b4b3f:      	jrcxz	 <L63>
   b4b41:      	push	rcx
   b4b42:      	push	rcx
   b4b43:      	rep		movabs	byte ptr [0x5dfea3a35df35151], al
   b4b4d:      	movabs	dword ptr [0x4080c0404080fea3], eax
   b4b56:      	rol	byte ptr , 0x8f <OPENSSL_ia32cap_P+0x554337d>
   b4b5e:      	<unknown>
   b4b62:      	xchg	eax, edx
   b4b63:      	lodsd	eax, dword ptr [rsi]
   b4b64:      	<unknown>
   b4b65:      	xchg	eax, edx
   b4b66:      	xchg	eax, edx
   b4b67:      	lodsd	eax, dword ptr [rsi]
   b4b68:      	and	dword ptr [rbp - 0x62de4363], ebx
   b4b6e:      	popfq
   b4b6f:      	mov	esp, 0x48383870
   b4b74:      	jo	 <L64>
   b4b76:      	cmp	byte ptr [rax - 0xf], cl
   b4b79:      	cmc
   b4b7a:      	cmc
   b4b7b:      	add	al, -0xf
   b4b7d:      	cmc
   b4b7e:      	cmc
   b4b7f:      	add	al, 0x63
   b4b81:      	mov	esp, 0xbc63dfbc
   b4b86:      	mov	esp, 0xb6b677df
   b4b8b:      	<unknown>
   b4b8e:      	mov	dh, -0x3f
   b4b90:      	scasd	eax, dword ptr es:[rdi]
   b4b91:      	fcmovu	st, st(2)
   b4b93:      	jne	 <L65>
   b4b95:      	fcmovu	st, st(2)
   b4b97:      	jne	 <L66>
   b4b99:      	and	dword ptr [rcx], esp
   b4b9b:      	movsxd	eax, dword ptr [rdx + 0x21]
   b4b9e:      	and	dword ptr [rbx + 0x20], esp
   b4ba1:      	adc	byte ptr [rax], dl
   b4ba3:      	xor	byte ptr [rax], ah
   b4ba5:      	adc	byte ptr [rax], dl
   b4ba7:      	xor	ch, ah
   b4ba9:      	<unknown>
   b4bab:      	sbb	ah, ch
   b4bad:      	<unknown>
   b4baf:      	sbb	bh, ch
   b4bb1:      	<unknown>
   b4bb4:      	std
   b4bb5:      	<unknown>
   b4bb8:      	mov	edi, 0xbf6dd2d2
   b4bbd:      	rcl	dl, cl
   b4bbf:      	insd	dword ptr es:[rdi], dx
   b4bc0:      	or	ebp, 0xcd814ccd
   b4bc6:      	int	0x4c
   b4bc8:      	sbb	byte ptr [rsp + rcx], cl
   b4bcb:      	adc	al, 0x18
   b4bcd:      	or	al, 0xc
   b4bcf:      	adc	al, 0x26
   b4bd1:      	adc	edx, dword ptr [rbx]
   b4bd3:      	xor	eax, 0x35131326
   b4bd8:      	ret
   b4bd9:      	in	al, dx
   b4bda:      	in	al, dx
<L66>:
   b4bdb:      	<unknown>
   b4bdc:      	ret
   b4bdd:      	in	al, dx
   b4bde:      	in	al, dx
   b4bdf:      	<unknown>
   b4be0:      	mov	esi, 0xbee15f5f
   b4be5:      	pop	rdi
   b4be6:      	pop	rdi
   b4be7:      	loope	 <L67>
   b4be9:      	xchg	eax, edi
   b4bea:      	xchg	eax, edi
   b4beb:      	movabs	byte ptr [-0x33bbbb775d6868cb], al
   b4bf4:      	mov	byte ptr [rsp + 2*rax - 0x34], al
   b4bf8:      	<unknown>
   b4bfa:      	<unknown>
   b4bfb:      	cmp	dword ptr [rsi], ebp
   b4bfd:      	<unknown>
   b4bfe:      	<unknown>
   b4bff:      	cmp	dword ptr [rbx - 0x6ca83b3c], edx
   b4c05:      	<unknown>
   b4c08:      	push	rbp
   b4c09:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b4c0a:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b4c0b:      	repne		push	rbp
   b4c0d:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b4c0e:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b4c0f:      	repne		cld
   b4c11:      	jle	 <L68>
   b4c13:      	<unknown>
   b4c14:      	cld
   b4c15:      	jle	 <L69>
   b4c17:      	<unknown>
   b4c18:      	jp	 <L70>
   b4c1a:      	cmp	eax, 0x3d3d7a47
   b4c1f:      	enter	0x6464, -0x54
   b4c24:      	enter	0x6464, -0x54
   b4c28:      	mov	edx, 0xbae75d5d
   b4c2d:      	pop	rbp
   b4c2e:      	pop	rbp
   b4c2f:      	out	0x32, eax
   b4c31:      	sbb	dword ptr [rcx], ebx
   b4c33:      	sub	esi, dword ptr [rdx]
   b4c35:      	sbb	dword ptr [rcx], ebx
   b4c37:      	sub	esp, esi
   b4c39:      	jae	 <L71>
   b4c3b:      	xchg	eax, ebp
   b4c3c:      	out	0x73, al
   b4c3e:      	jae	 <L72>
   b4c40:      	shl	byte ptr [rax + 0x60], 0xa0
   b4c44:      	shl	byte ptr [rax + 0x60], 0xa0
   b4c48:      	sbb	dword ptr [rcx - 0x7ee6677f], eax
   b4c4e:      	sbb	dword ptr [rax - 0x2eb0b062], 0xd14f4f9e
   b4c58:      	movabs	dword ptr [0x447fdcdca37fdcdc], eax
   b4c61:      	and	ah, byte ptr [rdx]
   b4c63:      	and	r12b, byte ptr [rdx]
   b4c67:      	push	sp
<L77>:
   b4c69:      	sub	ch, byte ptr [rdx]
   b4c6b:      	jle	 <L73>
   b4c6d:      	sub	ch, byte ptr [rdx]
   b4c6f:      	jle	 <L74>
   b4c71:      	nop
   b4c72:      	nop
   b4c73:      	stosd	dword ptr es:[rdi], eax
   b4c74:      	cmp	edx, dword ptr [rax - 0x77f45470]
   b4c7a:      	mov	byte ptr [rbx - 0x7c7777f5], al
   b4c80:      	mov	word ptr [rsi + 0x46], es
   b4c83:      	retf	0x468c
   b4c86:      	retf	-0x1139
   b4c8a:      	out	dx, al
   b4c8b:      	sub	edi, eax
   b4c8d:      	out	dx, al
   b4c8e:      	out	dx, al
   b4c8f:      	sub	dword ptr [rbx - 0x48], ebp
   b4c92:      	mov	eax, 0xb8b86bd3
   b4c97:      	shr	dword ptr [rax], cl
   b4c99:      	adc	al, 0x14
   b4c9b:      	cmp	al, 0x28
   b4c9d:      	adc	al, 0x14
   b4c9f:      	cmp	al, -0x59
   b4ca1:      	<unknown>
<L81>:
   b4ca3:      	jns	 <L75>
   b4ca5:      	<unknown>
<L82>:
   b4ca7:      	jns	 <L76>
   b4ca9:      	pop	rsi
   b4caa:      	pop	rsi
   b4cab:      	loop	 <L77>
   b4cad:      	pop	rsi
<L71>:
   b4cae:      	pop	rsi
   b4caf:      	loop	 <L78>
   b4cb1:      	or	ecx, dword ptr [rbx]
   b4cb3:      	sbb	eax, 0x1d0b0b16
   b4cb8:      	lodsd	eax, dword ptr [rsi]
   b4cb9:      	fcmovnu	st, st(3)
   b4cbb:      	jbe	 <L79>
   b4cbd:      	fcmovnu	st, st(3)
   b4cbf:      	jbe	 <L80>
<L73>:
   b4cc1:      	loopne	 <L81>
   b4cc3:      	cmp	ebx, ebx
   b4cc5:      	loopne	 <L82>
<L78>:
   b4cc7:      	cmp	esp, dword ptr [rdx + rsi + 0x32]
   b4ccb:      	push	rsi
   b4ccc:      	xor	dh, byte ptr fs:[rdx]
   b4ccf:      	push	rsi
   b4cd0:      	je	 <L83>
   b4cd2:      	cmp	cl, byte ptr [rsi + 0x74]
   b4cd5:      	cmp	bh, byte ptr [rdx]
   b4cd7:      	adc	al, 0xa
   b4cda:      	or	bl, byte ptr [rsi]
   b4cdc:      	adc	al, 0xa
   b4cde:      	or	bl, byte ptr [rsi]
   b4ce0:      	xchg	eax, edx
   b4ce1:      	fist	dword ptr [r10 + 0xcdb4949]
   b4ce9:      	<unknown>
   b4cea:      	<unknown>
   b4ceb:      	or	cl, byte ptr [rsi + rax]
   b4cee:      	<unknown>
   b4cef:      	or	cl, byte ptr [rax + 0x24]
   b4cf2:      	and	al, 0x6c
   b4cf4:      	and	al, 0x24
   b4cf7:      	insb	byte ptr es:[rdi], dx
   b4cf8:      	mov	eax, 0xb8e45c5c
   b4cfd:      	pop	rsp
   b4cfe:      	pop	rsp
   b4cff:      	in	al, 0x9f
   b4d01:      	ret	0x5dc2
   b4d04:      	lahf
   b4d05:      	ret	0x5dc2
   b4d08:      	mov	ebp, 0xbd6ed3d3
   b4d0d:      	rcl	ebx, cl
   b4d0f:      	outsb	dx, byte ptr [rsi]
   b4d10:      	lodsb	al, byte ptr [rsi]
   b4d12:      	lodsb	al, byte ptr [rsi]
   b4d13:      	out	dx, eax
   b4d14:      	lodsb	al, byte ptr [rsi]
   b4d16:      	lodsb	al, byte ptr [rsi]
   b4d17:      	out	dx, eax
   b4d18:      	<unknown>
   b4d1c:      	<unknown>
   b4d20:      	cmp	dword ptr [rcx - 0x6ec6576f], edx
   b4d26:      	xchg	eax, ecx
   b4d27:      	test	al, 0x31
   b4d29:      	xchg	eax, ebp
   b4d2a:      	xchg	eax, ebp
   b4d2b:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b4d2c:      	xor	dword ptr [rbp - 0x1b2c5b6b], edx
   b4d32:      	in	al, 0x37
   b4d34:      	shl	esp, cl
   b4d36:      	in	al, 0x37
   b4d38:      	repne		jns	 <L84>
   b4d3b:      	mov	esi, edx
   b4d3d:      	jns	 <L85>
   b4d3f:      	mov	edx, ebp
   b4d41:      	out	0xe7, eax
   b4d43:      	xor	dl, ch
   b4d45:      	out	0xe7, eax
   b4d47:      	xor	cl, byte ptr [rbx - 0x74bc3738]
   b4d4d:      	enter	0x43c8, 0x6e
   b4d51:      	<unknown>
   b4d52:      	<unknown>
   b4d53:      	pop	rcx
   b4d54:      	outsb	dx, byte ptr [rsi]
   b4d55:      	<unknown>
   b4d56:      	<unknown>
   b4d57:      	pop	rcx
   b4d58:      	fisubr	dword ptr [rbp + 0x6d]
   b4d5b:      	mov	bh, -0x26
   b4d5d:      	insd	dword ptr es:[rdi], dx
   b4d5e:      	insd	dword ptr es:[rdi], dx
   b4d5f:      	mov	bh, 0x1
   b4d61:      	lea	ecx, [rbp - 0x7272fe74]
   b4d67:      	<unknown>
   b4d6d:      	pcmpgtb	mm3, qword ptr [r30 + 2*rcx + 0x4e9cd24e]
   b4d76:      	ror	byte ptr [rcx - 0x57], cl
   b4d7a:      	test	eax, 0xa9a949e0
   b4d7f:      	loopne	 <L86>
   b4d81:      	insb	byte ptr es:[rdi], dx
   b4d82:      	insb	byte ptr es:[rdi], dx
   b4d83:      	mov	ah, -0x28
   b4d85:      	insb	byte ptr es:[rdi], dx
   b4d86:      	insb	byte ptr es:[rdi], dx
   b4d87:      	mov	ah, -0x54
   b4d89:      	push	rsi
   b4d8a:      	push	rsi
   b4d8b:      	cli
   b4d8c:      	lodsb	al, byte ptr [rsi]
   b4d8d:      	push	rsi
   b4d8e:      	push	rsi
   b4d8f:      	cli
   b4d90:      	rep		hlt
   b4d92:      	hlt
   b4d93:      	<unknown>
   b4d94:      	rep		hlt
   b4d96:      	hlt
   b4d97:      	<unknown>
   b4d98:      	iretd
   b4d99:      	<unknown>
   b4d9a:      	<unknown>
   b4d9b:      	and	eax, 0x25eaeacf
   b4da0:      	retf	0x6565
   b4da3:      	scasd	eax, dword ptr es:[rdi]
   b4da4:      	retf	0x6565
   b4da7:      	scasd	eax, dword ptr es:[rdi]
   b4da8:      	hlt
   b4da9:      	jp	 <L87>
   b4dab:      	<unknown>
   b4dad:      	jp	 <L88>
   b4daf:      	mov	es, word ptr [rdi - 0x52]
   b4db2:      	scasb	al, byte ptr es:[rdi]
   b4db3:      	jmp	 <OPENSSL_ia32cap_P+0xffffffffe978548f>
<L85>:
   b4db8:      	adc	byte ptr [rax], cl
   b4dba:      	or	byte ptr [rax], bl
   b4dbc:      	adc	byte ptr [rax], cl
   b4dbe:      	or	byte ptr [rax], bl
   b4dc0:      	outsd	dx, dword ptr [rsi]
   b4dc1:      	mov	edx, 0xba6fd5ba
   b4dc6:      	mov	edx, 0x7878f0d5
   b4dcb:      	mov	al, dh
   b4dcd:      	js	 <L89>
   b4dcf:      	mov	byte ptr [rdx + 0x25], cl
   b4dd2:      	and	eax, 0x25254a6f
   b4dd7:      	outsd	dx, dword ptr [rsi]
<L98>:
   b4dd8:      	pop	rsp
   b4dd9:      	jb	 <L90>
   b4ddd:      	jb	 <L91>
   b4de1:      	sbb	al, 0x1c
   b4de3:      	and	al, 0x38
   b4de5:      	sbb	al, 0x1c
   b4de7:      	and	al, 0x57
   b4de9:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b4dea:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b4deb:      	<unknown>
   b4dec:      	push	rdi
   b4ded:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b4dee:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b4def:      	<unknown>
   b4df0:      	jae	 <L92>
   b4df2:      	mov	ah, -0x39
   b4df4:      	jae	 <L93>
   b4df6:      	mov	ah, -0x39
   b4df8:      	xchg	eax, edi
<L95>:
   b4df9:      	mov	dh, 0x51
   b4dfc:      	xchg	eax, edi
   b4dfd:      	mov	dh, 0x51
   b4e00:      	retf
   b4e01:      	call	 <OPENSSL_ia32cap_P+0xffffffffe894ca7e>
   b4e06:      	call	 <OPENSSL_ia32cap_P+0xffffffffdda747be>
<L102>:
   b4e0b:      	jl	 <L94>
   b4e0d:      	fstp	st(5)
   b4e0f:      	jl	 <L95>
   b4e11:      	je	 <L96>
   b4e13:      	pushfq
   b4e14:      	call	 <OPENSSL_ia32cap_P+0x3e661b1d>
<L91>:
   b4e19:      	<unknown>
   b4e1a:      	<unknown>
   b4e1b:      	and	dword ptr [rsi], edi
   b4e1d:      	<unknown>
   b4e1e:      	<unknown>
   b4e1f:      	and	dword ptr [rsi - 0x6922b4b5], edx
<L87>:
   b4e25:      	frstor	[r9 - 0x43]
   b4e2a:      	mov	ebp, 0xbdbd61dc
   b4e2f:      	fmul	qword ptr  <OPENSSL_ia32cap_P+0xd503250>
   b4e35:      	mov	ecx, dword ptr [rbx - 0x7575f07a]
   b4e3b:      	test	dword ptr [rdi], ecx
   b4e3d:      	mov	cl, byte ptr [rdx + 0x7070e085]
   b4e43:      	nop
   b4e44:      	loopne	 <L97>
   b4e46:      	jo	 <L98>
   b4e48:      	jl	 <L99>
   b4e4a:      	jl	 <L100>
   b4e4e:      	jno	 <L101>
   b4e52:      	mov	ch, -0x3c
   b4e54:      	jno	 <L102>
   b4e56:      	mov	ch, -0x3c
   b4e58:      	int3
   b4e59:      	stosb	byte ptr es:[rdi], al
   b4e5c:      	int3
   b4e5d:      	stosb	byte ptr es:[rdi], al
   b4e60:      	nop
   b4e61:      	fcom	dword ptr [rax + 0x6d84848]
   b4e69:      	add	eax, dword ptr [rbx]
   b4e6b:      	add	eax, 0x5030306
   b4e70:      	div	esi
   b4e72:      	test	byte ptr [rcx], -0x9
   b4e75:      	div	dh
   b4e77:      	add	dword ptr [rsi + rcx], ebx
   b4e7a:      	<unknown>
   b4e7b:      	adc	bl, byte ptr [rsi + rcx]
   b4e7e:      	<unknown>
   b4e7f:      	adc	al, dl
   b4e81:      	<unknown>
   b4e82:      	<unknown>
   b4e83:      	movabs	dword ptr [0x5f35356aa36161c2], eax
<L100>:
   b4e8c:      	push	0x35
   b4e8e:      	xor	eax, 0x5757ae5f
   b4e93:      	stc
   b4e94:      	scasb	al, byte ptr es:[rdi]
   b4e95:      	push	rdi
   b4e96:      	push	rdi
   b4e97:      	stc
   b4e98:      	imul	edi, dword ptr [rcx - 0x46962f47], 0x8617d0b9
   b4ea2:      	xchg	byte ptr [rcx - 0x6e7979e9], dl
   b4ea8:      	cdq
   b4ea9:      	rol	ecx, 0x58
   b4eac:      	cdq
   b4ead:      	rol	ecx, 0x58
   b4eb0:      	cmp	bl, byte ptr  <OPENSSL_ia32cap_P+0x1d03ce63>
<L97>:
   b4eb6:      	sbb	eax, 0x9e9e2727
   b4ebb:      	mov	ecx, 0xb99e9e27
   b4ec0:      	fabs
<L105>:
   b4ec2:      	loope	 <L103>
   b4ec4:      	fabs
   b4ec6:      	loope	 <L104>
   b4ec8:      	jmp	 <L105>
   b4eca:      	clc
   b4ecb:      	adc	ebp, ebx
   b4ecd:      	clc
   b4ece:      	clc
   b4ecf:      	adc	ebp, dword ptr [rbx]
   b4ed1:      	cwde
   b4ed2:      	cwde
   b4ed3:      	mov	bl, 0x2b
   b4ed5:      	cwde
   b4ed6:      	cwde
   b4ed7:      	mov	bl, 0x22
   b4ed9:      	adc	dword ptr [rcx], edx
   b4edb:      	xor	esp, dword ptr [rdx]
   b4edd:      	adc	dword ptr [rcx], edx
   b4edf:      	xor	edx, edx
   b4ee1:      	imul	ebp, dword ptr [rcx - 0x45], 0xbb6969d2
   b4ee8:      	test	eax, 0xa970d9d9
   b4eed:      	<unknown>
   b4eef:      	jo	 <L106>
   b4ef1:      	mov	cs, word ptr [rsi - 0x7171f877]
   b4ef7:      	mov	dword ptr [rbx], esi
   b4ef9:      	xchg	eax, esp
   b4efa:      	xchg	eax, esp
   b4efb:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
<L103>:
   b4efc:      	xor	edx, dword ptr [rsp + 4*rdx - 0x6464d259]
   b4f03:      	mov	dh, 0x2d
   b4f05:      	wait
   b4f06:      	wait
   b4f07:      	mov	dh, 0x3c
   b4f09:      	<unknown>
   b4f0a:      	<unknown>
   b4f0b:      	and	bh, byte ptr [rsi + rbx]
   b4f0e:      	<unknown>
   b4f0f:      	and	dl, byte ptr  <OPENSSL_ia32cap_P+0x155c2f2c>
   b4f15:      	xchg	dword ptr [rdi - 0x1616366e], eax
   b4f1b:      	and	cl, cl
   b4f1d:      	jmp	 <OPENSSL_ia32cap_P+0xffffffffce50c89b>
   b4f22:      	<unknown>
   b4f23:      	xchg	rcx, r14
   b4f26:      	<unknown>
   b4f27:      	stosb	byte ptr es:[rdi], al
   b4f29:      	push	rbp
   b4f2a:      	push	rbp
   b4f2b:      	jmp	[rdx + 0x50ff5555]
   b4f31:      	sub	byte ptr [rax], ch
   b4f33:      	js	 <L107>
   b4f35:      	sub	byte ptr [rax], ch
   b4f37:      	js	 <L108>
   b4f39:      	<unknown>
   b4f3b:      	jp	 <L109>
   b4f3d:      	<unknown>
   b4f3f:      	jp	 <L110>
   b4f41:      	mov	word ptr [rdi + 4*rcx - 0x707373fd], cs
   b4f48:      	pop	rcx
   b4f49:      	movabs	eax, dword ptr [-0x76f6075e5ea6075f]
   b4f52:      	mov	dword ptr [rax - 0x7f7676f7], eax
   b4f58:      	sbb	cl, byte ptr  <OPENSSL_ia32cap_P+0xce3befb>
   b4f5e:      	or	eax, 0xbfbf6517
   b4f63:      	fisub	dword ptr [rbp - 0x41]
   b4f66:      	mov	edi, 0xe6e6d7da
   b4f6b:      	xor	edi, edx
   b4f6d:      	out	0xe6, al
   b4f6f:      	xor	dword ptr [rdx + 2*rax + 0x4284c642], eax
   b4f76:      	<unknown>
   b4f79:      	push	0x68d0b868
   b4f7e:      	push	0x414182b8
   b4f83:      	ret
   b4f84:      	<unknown>
<L107>:
   b4f85:      	ret
   b4f88:      	sub	dword ptr [rcx - 0x66d64f67], ebx
   b4f8e:      	cdq
   b4f8f:      	mov	al, 0x5a
   b4f91:      	sub	eax, 0x2d5a772d
   b4f96:      	sub	eax, 0xf0f1e77
<L113>:
   b4f9b:      	adc	dword ptr [rsi], ebx
   b4f9d:      	<unknown>
   b4fa1:      	mov	al, -0x50
   b4fa3:      	retf
   b4fa4:      	jnp	 <L111>
   b4fa6:      	mov	al, -0x35
   b4fa8:      	test	al, 0x54
   b4faa:      	push	rsp
   b4fab:      	cld
   b4fac:      	test	al, 0x54
   b4fae:      	push	rsp
   b4faf:      	cld
   b4fb0:      	insd	dword ptr es:[rdi], dx
   b4fb1:      	mov	ebx, 0xbb6dd6bb
   b4fb6:      	mov	ebx, 0x16162cd6
   b4fbb:      	cmp	ch, byte ptr [rsi + rdx]
   b4fbe:      	<unknown>
   b4fbf:      	cmp	ah, byte ptr [rbx + 0x7c]
   b4fc2:      	ja	 <L112>
   b4fc4:      	repne		imul	ebp, dword ptr [rdi - 0x3b], 0x30
   b4fc9:      	add	dword ptr [rdi + 0x2b], esp
   b4fcc:      	<unknown>
   b4fce:      	stosd	dword ptr es:[rdi], eax
<L114>:
   b4fcf:      	jbe	 <L113>
   b4fd1:      	<unknown>
   b4fd2:      	leave
   b4fd3:      	jge	 <L114>
   b4fd5:      	pop	rcx
   b4fd6:      	lock		lodsd	eax, dword ptr [rsi]
   b4fd9:      	<unknown>
   b4fda:      	movabs	byte ptr [-0x6c02483f8d5b6351], al
   b4fe3:      	<unknown>
   b4fe6:      	<unknown>
   b4fe8:      	xor	al, -0x5b
   b4fea:      	in	eax, 0xf1
   b4fec:      	jno	 <L115>
   b4fee:      	xor	dword ptr , edx <OPENSSL_ia32cap_P+0xffffffffc2ed6f88>
   b4ff4:      	sbb	byte ptr [rsi + 0x12079a05], dl
   b4ffa:      	and	dl, -0x15
   b4ffd:      	<unknown>
   b4ffe:      	mov	dl, 0x75
   b5000:      	or	dword ptr [rbx + 0x6e1b1a2c], eax
   b5006:      	pop	rdx
   b5007:      	movabs	al, byte ptr [-0x7bd01cd64c29c4ae]
   b5010:      	push	rbx
   b5011:      	rol	dword ptr [rax]
   b5013:      	in	eax, dx
   b5014:      	and	ah, bh
   b5016:      	mov	cl, 0x5b
   b5018:      	push	-0x35
   b501a:      	mov	esi, 0x584c4a39
   b501f:      	iretd
   b5020:      	shr	bh
   b5022:      	stosb	byte ptr es:[rdi], al
   b5023:      	sti
   b5024:      	xor	r8, qword ptr [r13 + 0x7f02f945]
   b502c:      	push	rax
<L116>:
   b502d:      	cmp	al, -0x61
   b502f:      	test	al, 0x51
   b5031:      	movabs	dword ptr [-0x49430ac7626d70c0], eax
   b503a:      	fisub	dword ptr [rcx]
   b503c:      	adc	bh, bh
   b503e:      	rep		ror	ch, cl
   b5041:      	or	al, 0x13
   b5043:      	in	al, dx
   b5044:      	pop	rdi
   b5045:      	xchg	eax, edi
   b5046:      	<unknown>
   b5048:      	<unknown>
   b504c:      	pop	rbp
   b504e:      	sbb	dword ptr [rbx + 0x60], esi
   b5051:      	or	dword ptr [rdi - 0x24], 0x88902a22
   b5058:      	out	dx, al
   b505a:      	mov	eax, 0xb5ede14
   b505f:      	<unknown>
   b5061:      	xor	bh, byte ptr [rdx]
   b5063:      	or	cl, byte ptr [rcx + 0x6]
   b5066:      	and	al, 0x5c
   b5068:      	ret	-0x532d
   b506b:      	<unknown>
   b5071:      	enter	0x6d37, -0x73
   b5075:      	test	rax, -0x150ba994
   b507c:      	jp	 <L116>
   b507f:      	or	byte ptr [rdx + 0x1c2e2578], bh
   b5085:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b5086:      	mov	ah, -0x3a
   b5088:      	call	 <OPENSSL_ia32cap_P+0x4ae91dfa>
   b508d:      	mov	ebp, 0x3e708a8b
   b5092:      	mov	ch, 0x66
   b5094:      	add	rsi, rsi
   b5097:      	<unknown>
   b5098:      	<unknown>
   b5099:      	xor	eax, 0xc186b957
   b509e:      	sbb	eax, 0x98f8e19e
   b50a3:      	adc	dword ptr [rcx - 0x27], ebp
   b50a6:      	mov	ss, word ptr [rbx + 4*rbx - 0x311678e2]
   b50ad:      	push	rbp
   b50ae:      	sub	bh, bl
   b50b0:      	mov	word ptr [rcx - 0x1940f277], fs
   b50b6:      	push	0xf2d9941
   b50bc:      	mov	al, 0x54
   b50be:      	mov	ebx, 0x777c6316
   b50c3:      	jnp	 <L117>
   b50c5:      	imul	ebp, dword ptr [rdi - 0x3b], 0x30
   b50c9:      	add	dword ptr [rdi + 0x2b], esp
   b50cc:      	<unknown>
   b50ce:      	stosd	dword ptr es:[rdi], eax
<L119>:
   b50cf:      	jbe	 <L118>
   b50d1:      	<unknown>
   b50d2:      	leave
   b50d3:      	jge	 <L119>
   b50d5:      	pop	rcx
   b50d6:      	lock		lodsd	eax, dword ptr [rsi]
   b50d9:      	<unknown>
   b50da:      	movabs	byte ptr [-0x6c02483f8d5b6351], al
   b50e3:      	<unknown>
   b50e6:      	<unknown>
   b50e8:      	xor	al, -0x5b
   b50ea:      	in	eax, 0xf1
   b50ec:      	jno	 <L120>
   b50ee:      	xor	dword ptr , edx <OPENSSL_ia32cap_P+0xffffffffc2ed7088>
   b50f4:      	sbb	byte ptr [rsi + 0x12079a05], dl
   b50fa:      	and	dl, -0x15
   b50fd:      	<unknown>
   b50fe:      	mov	dl, 0x75
   b5100:      	or	dword ptr [rbx + 0x6e1b1a2c], eax
   b5106:      	pop	rdx
   b5107:      	movabs	al, byte ptr [-0x7bd01cd64c29c4ae]
   b5110:      	push	rbx
   b5111:      	rol	dword ptr [rax]
   b5113:      	in	eax, dx
   b5114:      	and	ah, bh
   b5116:      	mov	cl, 0x5b
   b5118:      	push	-0x35
   b511a:      	mov	esi, 0x584c4a39
   b511f:      	iretd
   b5120:      	shr	bh
   b5122:      	stosb	byte ptr es:[rdi], al
   b5123:      	sti
   b5124:      	xor	r8, qword ptr [r13 + 0x7f02f945]
   b512c:      	push	rax
<L121>:
   b512d:      	cmp	al, -0x61
   b512f:      	test	al, 0x51
   b5131:      	movabs	dword ptr [-0x49430ac7626d70c0], eax
   b513a:      	fisub	dword ptr [rcx]
   b513c:      	adc	bh, bh
   b513e:      	rep		ror	ch, cl
   b5141:      	or	al, 0x13
   b5143:      	in	al, dx
   b5144:      	pop	rdi
   b5145:      	xchg	eax, edi
   b5146:      	<unknown>
   b5148:      	<unknown>
   b514c:      	pop	rbp
   b514e:      	sbb	dword ptr [rbx + 0x60], esi
   b5151:      	or	dword ptr [rdi - 0x24], 0x88902a22
   b5158:      	out	dx, al
   b515a:      	mov	eax, 0xb5ede14
   b515f:      	<unknown>
   b5161:      	xor	bh, byte ptr [rdx]
   b5163:      	or	cl, byte ptr [rcx + 0x6]
   b5166:      	and	al, 0x5c
   b5168:      	ret	-0x532d
   b516b:      	<unknown>
   b5171:      	enter	0x6d37, -0x73
   b5175:      	test	rax, -0x150ba994
   b517c:      	jp	 <L121>
   b517f:      	or	byte ptr [rdx + 0x1c2e2578], bh
   b5185:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b5186:      	mov	ah, -0x3a
   b5188:      	call	 <OPENSSL_ia32cap_P+0x4ae91efa>
   b518d:      	mov	ebp, 0x3e708a8b
   b5192:      	mov	ch, 0x66
   b5194:      	add	rsi, rsi
   b5197:      	<unknown>
   b5198:      	<unknown>
   b5199:      	xor	eax, 0xc186b957
   b519e:      	sbb	eax, 0x98f8e19e
   b51a3:      	adc	dword ptr [rcx - 0x27], ebp
   b51a6:      	mov	ss, word ptr [rbx + 4*rbx - 0x311678e2]
   b51ad:      	push	rbp
   b51ae:      	sub	bh, bl
   b51b0:      	mov	word ptr [rcx - 0x1940f277], fs
   b51b6:      	push	0xf2d9941
   b51bc:      	mov	al, 0x54
   b51be:      	mov	ebx, 0x777c6316
   b51c3:      	jnp	 <L122>
   b51c5:      	imul	ebp, dword ptr [rdi - 0x3b], 0x30
   b51c9:      	add	dword ptr [rdi + 0x2b], esp
   b51cc:      	<unknown>
   b51ce:      	stosd	dword ptr es:[rdi], eax
<L124>:
   b51cf:      	jbe	 <L123>
   b51d1:      	<unknown>
   b51d2:      	leave
   b51d3:      	jge	 <L124>
   b51d5:      	pop	rcx
   b51d6:      	lock		lodsd	eax, dword ptr [rsi]
   b51d9:      	<unknown>
   b51da:      	movabs	byte ptr [-0x6c02483f8d5b6351], al
   b51e3:      	<unknown>
   b51e6:      	<unknown>
   b51e8:      	xor	al, -0x5b
   b51ea:      	in	eax, 0xf1
   b51ec:      	jno	 <L125>
   b51ee:      	xor	dword ptr , edx <OPENSSL_ia32cap_P+0xffffffffc2ed7188>
   b51f4:      	sbb	byte ptr [rsi + 0x12079a05], dl
   b51fa:      	and	dl, -0x15
   b51fd:      	<unknown>
   b51fe:      	mov	dl, 0x75
   b5200:      	or	dword ptr [rbx + 0x6e1b1a2c], eax
   b5206:      	pop	rdx
   b5207:      	movabs	al, byte ptr [-0x7bd01cd64c29c4ae]
   b5210:      	push	rbx
   b5211:      	rol	dword ptr [rax]
   b5213:      	in	eax, dx
   b5214:      	and	ah, bh
   b5216:      	mov	cl, 0x5b
   b5218:      	push	-0x35
   b521a:      	mov	esi, 0x584c4a39
   b521f:      	iretd
   b5220:      	shr	bh
   b5222:      	stosb	byte ptr es:[rdi], al
   b5223:      	sti
   b5224:      	xor	r8, qword ptr [r13 + 0x7f02f945]
   b522c:      	push	rax
<L126>:
   b522d:      	cmp	al, -0x61
   b522f:      	test	al, 0x51
   b5231:      	movabs	dword ptr [-0x49430ac7626d70c0], eax
   b523a:      	fisub	dword ptr [rcx]
   b523c:      	adc	bh, bh
   b523e:      	rep		ror	ch, cl
   b5241:      	or	al, 0x13
   b5243:      	in	al, dx
   b5244:      	pop	rdi
   b5245:      	xchg	eax, edi
   b5246:      	<unknown>
   b5248:      	<unknown>
   b524c:      	pop	rbp
   b524e:      	sbb	dword ptr [rbx + 0x60], esi
   b5251:      	or	dword ptr [rdi - 0x24], 0x88902a22
   b5258:      	out	dx, al
   b525a:      	mov	eax, 0xb5ede14
   b525f:      	<unknown>
   b5261:      	xor	bh, byte ptr [rdx]
   b5263:      	or	cl, byte ptr [rcx + 0x6]
   b5266:      	and	al, 0x5c
   b5268:      	ret	-0x532d
   b526b:      	<unknown>
   b5271:      	enter	0x6d37, -0x73
   b5275:      	test	rax, -0x150ba994
   b527c:      	jp	 <L126>
   b527f:      	or	byte ptr [rdx + 0x1c2e2578], bh
   b5285:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b5286:      	mov	ah, -0x3a
   b5288:      	call	 <OPENSSL_ia32cap_P+0x4ae91ffa>
   b528d:      	mov	ebp, 0x3e708a8b
   b5292:      	mov	ch, 0x66
   b5294:      	add	rsi, rsi
   b5297:      	<unknown>
   b5298:      	<unknown>
   b5299:      	xor	eax, 0xc186b957
   b529e:      	sbb	eax, 0x98f8e19e
   b52a3:      	adc	dword ptr [rcx - 0x27], ebp
   b52a6:      	mov	ss, word ptr [rbx + 4*rbx - 0x311678e2]
   b52ad:      	push	rbp
   b52ae:      	sub	bh, bl
   b52b0:      	mov	word ptr [rcx - 0x1940f277], fs
   b52b6:      	push	0xf2d9941
   b52bc:      	mov	al, 0x54
   b52be:      	mov	ebx, 0x777c6316
   b52c3:      	jnp	 <L127>
   b52c5:      	imul	ebp, dword ptr [rdi - 0x3b], 0x30
   b52c9:      	add	dword ptr [rdi + 0x2b], esp
   b52cc:      	<unknown>
   b52ce:      	stosd	dword ptr es:[rdi], eax
<L129>:
   b52cf:      	jbe	 <L128>
   b52d1:      	<unknown>
   b52d2:      	leave
   b52d3:      	jge	 <L129>
   b52d5:      	pop	rcx
   b52d6:      	lock		lodsd	eax, dword ptr [rsi]
   b52d9:      	<unknown>
   b52da:      	movabs	byte ptr [-0x6c02483f8d5b6351], al
   b52e3:      	<unknown>
   b52e6:      	<unknown>
   b52e8:      	xor	al, -0x5b
   b52ea:      	in	eax, 0xf1
   b52ec:      	jno	 <L130>
   b52ee:      	xor	dword ptr , edx <OPENSSL_ia32cap_P+0xffffffffc2ed7288>
   b52f4:      	sbb	byte ptr [rsi + 0x12079a05], dl
   b52fa:      	and	dl, -0x15
   b52fd:      	<unknown>
   b52fe:      	mov	dl, 0x75
   b5300:      	or	dword ptr [rbx + 0x6e1b1a2c], eax
   b5306:      	pop	rdx
   b5307:      	movabs	al, byte ptr [-0x7bd01cd64c29c4ae]
   b5310:      	push	rbx
   b5311:      	rol	dword ptr [rax]
   b5313:      	in	eax, dx
   b5314:      	and	ah, bh
   b5316:      	mov	cl, 0x5b
   b5318:      	push	-0x35
   b531a:      	mov	esi, 0x584c4a39
   b531f:      	iretd
   b5320:      	shr	bh
   b5322:      	stosb	byte ptr es:[rdi], al
   b5323:      	sti
   b5324:      	xor	r8, qword ptr [r13 + 0x7f02f945]
   b532c:      	push	rax
<L131>:
   b532d:      	cmp	al, -0x61
   b532f:      	test	al, 0x51
   b5331:      	movabs	dword ptr [-0x49430ac7626d70c0], eax
   b533a:      	fisub	dword ptr [rcx]
   b533c:      	adc	bh, bh
   b533e:      	rep		ror	ch, cl
   b5341:      	or	al, 0x13
   b5343:      	in	al, dx
   b5344:      	pop	rdi
   b5345:      	xchg	eax, edi
   b5346:      	<unknown>
   b5348:      	<unknown>
   b534c:      	pop	rbp
   b534e:      	sbb	dword ptr [rbx + 0x60], esi
   b5351:      	or	dword ptr [rdi - 0x24], 0x88902a22
   b5358:      	out	dx, al
   b535a:      	mov	eax, 0xb5ede14
   b535f:      	<unknown>
   b5361:      	xor	bh, byte ptr [rdx]
   b5363:      	or	cl, byte ptr [rcx + 0x6]
   b5366:      	and	al, 0x5c
   b5368:      	ret	-0x532d
   b536b:      	<unknown>
   b5371:      	enter	0x6d37, -0x73
   b5375:      	test	rax, -0x150ba994
   b537c:      	jp	 <L131>
   b537f:      	or	byte ptr [rdx + 0x1c2e2578], bh
   b5385:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b5386:      	mov	ah, -0x3a
   b5388:      	call	 <OPENSSL_ia32cap_P+0x4ae920fa>
   b538d:      	mov	ebp, 0x3e708a8b
   b5392:      	mov	ch, 0x66
   b5394:      	add	rsi, rsi
   b5397:      	<unknown>
   b5398:      	<unknown>
   b5399:      	xor	eax, 0xc186b957
   b539e:      	sbb	eax, 0x98f8e19e
   b53a3:      	adc	dword ptr [rcx - 0x27], ebp
   b53a6:      	mov	ss, word ptr [rbx + 4*rbx - 0x311678e2]
   b53ad:      	push	rbp
   b53ae:      	sub	bh, bl
   b53b0:      	mov	word ptr [rcx - 0x1940f277], fs
   b53b6:      	push	0xf2d9941
   b53bc:      	mov	al, 0x54
   b53be:      	mov	ebx, 0x116
   b53c3:      	add	byte ptr [rdx], al
   b53c5:      	add	byte ptr [rax], al
   b53c7:      	add	byte ptr [rax + rax], al
   b53ca:      	add	byte ptr [rax], al
   b53cc:      	or	byte ptr [rax], al
   b53ce:      	add	byte ptr [rax], al
   b53d0:      	adc	byte ptr [rax], al
   b53d2:      	add	byte ptr [rax], al
   b53d4:      	and	byte ptr [rax], al
   b53d6:      	add	byte ptr [rax], al
   b53d8:      	add	byte ptr [rax], al
   b53db:      	add	byte ptr [rax + 0x1b000000], al
   b53e1:      	add	byte ptr [rax], al
   b53e3:      	add	byte ptr [rsi], dh
<L137>:
   b53e5:      	add	byte ptr [rax], al
   b53e7:      	add	byte ptr [rax - 0x7f7f7f80], al
   b53ed:      	add	byte ptr [rax - 0x1010180], -0x2
   b53f4:      	<unknown>
   b53f6:      	<unknown>
   b53f8:      	sbb	ebx, dword ptr [rbx]
   b53fa:      	sbb	ebx, dword ptr [rbx]
   b53fc:      	sbb	ebx, dword ptr [rbx]
   b53fe:      	sbb	ebx, dword ptr [rbx]
   b5400:      	push	rcx
   b5401:      	hlt
   b5402:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b5403:      	push	rax
   b5404:      	push	rcx
   b5405:      	hlt
   b5406:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b5407:      	push	rax
   b5408:      	jle	 <L132>
   b540a:      	push	rbx
   b540c:      	jle	 <L133>
   b540e:      	push	rbx
   b5410:      	sbb	dl, byte ptr [rdi]
   b5412:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b5413:      	ret
   b5414:      	sbb	dl, byte ptr [rdi]
   b5416:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b5417:      	ret
   b5418:      	cmp	ah, byte ptr [rdi]
   b541a:      	pop	rsi
   b541b:      	xchg	eax, esi
   b541c:      	cmp	ah, byte ptr [rdi]
   b541e:      	pop	rsi
   b541f:      	xchg	eax, esi
   b5420:      	cmp	ebp, dword ptr [rbx - 0x54c43495]
   b5426:      	imul	ecx, ebx, 0x1f
   b5429:      	popfq
   b542a:      	<unknown>
   b542c:      	<unknown>
   b542d:      	popfq
   b542e:      	<unknown>
   b5430:      	lodsb	al, byte ptr [rsi]
   b5431:      	cli
   b5432:      	pop	rax
   b5433:      	stosd	dword ptr es:[rdi], eax
   b5434:      	lodsb	al, byte ptr [rsi]
   b5435:      	cli
   b5436:      	pop	rax
   b5437:      	stosd	dword ptr es:[rdi], eax
   b5438:      	jrcxz	 <L134>
   b543b:      	xchg	eax, ebx
   b543c:      	jrcxz	 <L135>
   b543f:      	xchg	eax, ebx
   b5440:      	and	byte ptr [rax], dh
<L135>:
   b5442:      	cli
   b5443:      	push	rbp
   b5444:      	and	byte ptr [rax], dh
   b5446:      	cli
   b5447:      	push	rbp
   b5448:      	lodsd	eax, dword ptr [rsi]
   b5449:      	jbe	 <L136>
<L132>:
   b544b:      	imul	byte ptr [rbp - 0x7709928a]
   b5451:      	int3
   b5452:      	jbe	 <L137>
   b5454:      	mov	ah, cl
   b5456:      	jbe	 <L138>
   b5458:      	cmc
   b5459:      	add	cl, byte ptr [rbp + riz - 0xb]
   b545d:      	add	cl, byte ptr [rbp + riz + 0x4f]
   b5461:      	in	eax, 0xd7
   b5463:      	cld
<L140>:
   b5464:      	in	eax, 0xd7
   b5467:      	cld
   b5468:      	<unknown>
   b546b:      	xlatb
   b546c:      	<unknown>
   b546f:      	xlatb
   b5470:      	xor	eax, 0x35268044
   b5476:      	xor	byte ptr [rbp - 0x4a705c9e], 0x62
   b547e:      	movabs	dword ptr [0x5ab1de495ab1de8f], eax
   b5487:      	and	rax, 0x25671bba
   b548d:      	mov	edx, 0xea45671b
   b5492:      	<unknown>
   b5493:      	cwde
   b5494:      	<unknown>
   b5496:      	<unknown>
   b5497:      	cwde
   b5498:      	pop	rbp
   b5499:      	inc	al
   b549b:      	loope	 <L139>
   b549d:      	inc	al
   b549f:      	loope	 <L140>
   b54a1:      	<unknown>
   b54a2:      	jne	 <L141>
   b54a4:      	ret
   b54a5:      	<unknown>
<L141>:
   b54a6:      	jne	 <L142>
   b54a8:      	or	dword ptr [rax + 8*rsi + 0x12], 0x12f04c81
   b54b0:      	lea	eax, [rsi - 0x69]
   b54b3:      	movabs	dword ptr [-0x39062c945c68b973], eax
   b54bc:      	imul	edx, ebx, -0x7
   b54bf:      	mov	byte ptr [rbx], -0x71
   b54c2:      	pop	rdi
<L143>:
   b54c3:      	out	0x3, eax
   b54c5:      	<unknown>
   b54c8:      	adc	eax, 0x15959c92
   b54cd:      	xchg	eax, edx
   b54ce:      	pushfq
   b54cf:      	xchg	eax, ebp
   b54d0:      	mov	edi, 0xbfeb7a6d
   b54d5:      	insd	dword ptr es:[rdi], dx
   b54d6:      	jp	 <L143>
   b54d8:      	xchg	eax, ebp
   b54d9:      	push	rdx
   b54da:      	pop	rcx
   b54db:      	ficom	dword ptr [rbp - 0x2b25a6ae]
   b54e1:      	mov	esi, 0xbed42d83
   b54e6:      	sub	dword ptr , 0x58 <OPENSSL_ia32cap_P+0xffffffffd2eb21d5>
   b54ed:      	je	 <L144>
   b54ef:      	ror	dword ptr [rcx - 0x20], cl
   b54f2:      	imul	ebp, dword ptr [rcx], 0x2969e049
   b54f8:      	mov	cs, ecx
<L139>:
   b54fa:      	enter	-0x71bc, -0x37
   b54fe:      	enter	0x7544, -0x3e
   b5502:      	mov	dword ptr [rdx + 0x75], ebp
   b5505:      	ret	0x6a89
<L147>:
   b5508:      	hlt
   b5509:      	<unknown>
   b550c:      	hlt
   b550d:      	<unknown>
<L144>:
   b5510:      	cdq
   b5511:      	pop	rax
   b5512:      	imul	ebx, dword ptr ds:[rcx + 0x276b3e58], -0x47
   b551a:      	jno	 <L145>
   b551c:      	<unknown>
   b551d:      	mov	ecx, 0xe1bedd71
   b5522:      	mov	r14b, -0x42
   b5525:      	loope	 <L146>
   b5527:      	mov	dh, -0x10
   b5529:      	mov	byte ptr [rbp - 0x52770fe9], ch
   b552f:      	<unknown>
   b5530:      	leave
   b5531:      	and	byte ptr [rsi + 2*riz + 0x66ac20c9], ch
   b5538:      	jge	 <L147>
   b553a:      	cmp	dh, byte ptr [rbp + 2*rdi + 0x63b43ace]
   b5541:      	fisttp	word ptr [rdx + 0x18]
<L149>:
   b5544:      	movsxd	ebx, edi
   b5546:      	sbb	bpl, spl
   b5549:      	sbb	dh, byte ptr [rcx]
   b554b:      	<unknown>
   b554c:      	in	eax, 0x1a
   b554e:      	xor	dword ptr [rdx + 0x60335197], eax
   b5554:      	xchg	eax, edi
   b5555:      	push	rcx
   b5556:      	xor	esp, dword ptr [rax + 0x62]
   b5559:      	push	rbx
   b555a:      	jg	 <L148>
   b555c:      	<unknown>
   b5561:      	ja	 <L149>
   b5564:      	mov	cl, 0x64
   b5566:      	ja	 <L150>
   b5568:      	mov	ebx, 0xbb84ae6b
   b556d:      	imul	ebp, dword ptr [rsi - 0x5f7e017c], 0x1c
   b5574:      	inc	byte ptr [rcx + 0x8f91ca0]
   b557a:      	sub	edx, dword ptr [rcx + 8*rdi + 0x70942b08]
   b5581:      	push	0x68487058
   b5587:      	pop	rax
   b5588:      	pop	qword ptr [rbp - 0x3]
   b558b:      	sbb	dword ptr [rdi - 0x6be602bb], ecx
   b5591:      	fisubr	word ptr [rdi + 4*rax - 0x6c]
   b5595:      	fisubr	word ptr [rdi + 4*rax + 0x52]
   b5599:      	jnp	 <L151>
   b559b:      	mov	bh, 0x52
   b559d:      	jnp	 <L152>
   b559f:      	mov	bh, -0x55
<L148>:
   b55a1:      	jae	 <L146>
   b55a3:      	and	ebp, dword ptr [rbx + 0x7223d373]
   b55a9:      	add	spl, r10b
   b55ac:      	jb	 <L153>
   b55ae:      	add	ah, dl
   b55b0:      	jrcxz	 <L154>
   b55b2:      	<unknown>
   b55b5:      	<unknown>
   b55b6:      	<unknown>
   b55b9:      	push	rbp
   b55ba:      	stosd	dword ptr es:[rdi], eax
   b55bb:      	sub	ah, byte ptr [rsi + 0x55]
   b55be:      	stosd	dword ptr es:[rdi], eax
<L156>:
   b55bf:      	sub	dh, byte ptr [rdx - 0x4df8d715]
   b55c5:      	jmp	 <L155>
   b55c7:      	<unknown>
   b55c8:      	<unknown>
   b55c9:      	mov	ch, -0x3e
   b55cb:      	add	ebp, dword ptr [rdi]
   b55cd:      	mov	ch, -0x3e
   b55cf:      	add	eax, dword ptr [rsi - 0x7965843b]
   b55d5:      	<unknown>
   b55d8:      	<unknown>
   b55da:      	or	byte ptr [rbp - 0x5af7c82d], ah
   b55e0:      	xor	byte ptr [rax], ch
   b55e2:      	xchg	esi, edx
   b55e4:      	xor	byte ptr [rax], ch
   b55e6:      	xchg	esi, edx
   b55e8:      	and	edi, dword ptr [rdi - 0x40dc4d5b]
   b55ee:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
<L155>:
   b55ef:      	mov	dl, 0x2
   b55f1:      	add	ebp, dword ptr [rdx - 0x46]
   b55f4:      	add	al, byte ptr [rbx]
   b55f6:      	push	-0x46
   b55f8:      	in	eax, dx
<L153>:
   b55f9:      	<unknown>
   b55fa:      	<unknown>
   b55fb:      	pop	rsp
   b55fc:      	in	eax, dx
   b55fd:      	<unknown>
   b55fe:      	<unknown>
   b55ff:      	pop	rsp
   b5600:      	mov	cl, bh
   b5602:      	sbb	al, 0x2b
   b5604:      	mov	cl, bh
   b5606:      	sbb	al, 0x2b
   b5608:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b5609:      	jns	 <L156>
   b560b:      	xchg	eax, edx
   b560c:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b560d:      	jns	 <L157>
   b560f:      	xchg	eax, edx
   b5610:      	<unknown>
<L160>:
   b5612:      	xacquire
   b5613:      	lock
   b5614:      	<unknown>
<L161>:
   b5616:      	xacquire
   b5617:      	lock
   b5618:      	imul	r12, rdx, -0x1d96b15f
   b561f:      	movabs	eax, dword ptr [-0x320b259a320b259b]
   b5628:      	<unknown>
   b5629:      	add	eax, 0x506d5be
   b562e:      	mov	esi, 0x6234d1d5
   b5633:      	<unknown>
   b5634:      	<unknown>
   b5637:      	<unknown>
   b5638:      	<unknown>
   b563c:      	<unknown>
   b5640:      	xor	al, 0x2e
   b5642:      	push	rbx
   b5643:      	popfq
   b5644:      	xor	al, 0x2e
   b5646:      	push	rbx
   b5647:      	popfq
   b5648:      	movabs	byte ptr [0x5a055f3a2a055f3], al
   b5651:      	mov	ah, cl
   b5653:      	xor	al, byte ptr  <OPENSSL_ia32cap_P+0xffffffffa3fc9073>
   b5659:      	imul	bl
   b565b:      	jne	 <L158>
   b565d:      	imul	bl
   b565f:      	jne	 <L159>
   b5661:      	sub	esp, 0x39
   b5664:      	or	eax, dword ptr [rbx + 0x604039ec]
   b566a:      	out	dx, eax
   b566b:      	stosb	byte ptr es:[rdi], al
<L159>:
   b566c:      	<unknown>
<L162>:
   b566e:      	out	dx, eax
   b566f:      	stosb	byte ptr es:[rdi], al
   b5670:      	pop	rsi
   b5671:      	jno	 <L160>
   b5673:      	<unknown>
   b5674:      	pop	rsi
   b5675:      	jno	 <L161>
   b5677:      	<unknown>
   b5678:      	mov	ebp, 0xbd51106e
   b567d:      	outsb	dx, byte ptr [rsi]
   b567e:      	adc	byte ptr [rcx + 0x3e], dl
   b5681:      	and	dword ptr [rdx - 0x75dec107], ecx
   b5687:      	stc
   b5688:      	xchg	eax, esi
   b5689:      	fld	qword ptr [rsi]
   b568b:      	cmp	eax, 0x3d06dd96
   b5690:      	fnstsw	word ptr [rsi]
   b5692:      	add	eax, 0x53eddae
   b5697:      	scasb	al, byte ptr es:[rdi]
   b5698:      	out	0xbd, al
   b569b:      	out	0xbd, al
   b569f:      	xchg	eax, ecx
   b56a1:      	push	rsp
   b56a2:      	lea	esi, [rbp - 0x4a72ab6f]
   b56a8:      	jno	 <L162>
   b56aa:      	pop	rbp
   b56ab:      	add	eax, 0x55dc471
   b56b0:      	add	al, 0x6
   b56b2:      	<unknown>
   b56b3:      	outsd	dx, dword ptr [rsi]
   b56b4:      	add	al, 0x6
   b56b6:      	<unknown>
   b56b7:      	outsd	dx, dword ptr [rsi]
   b56b8:      	<unknown>
   b56b9:      	push	rax
   b56ba:      	adc	eax, 0x155060ff
   b56bf:      	call	[rcx]
   b56c1:      	cwde
<L164>:
   b56c2:      	sti
   b56c3:      	and	al, 0x19
   b56c5:      	cwde
   b56c6:      	sti
   b56c7:      	and	al, -0x2a
   b56c9:      	mov	ebp, 0xbdd697e9
   b56ce:      	jmp	 <OPENSSL_ia32cap_P+0x430a38fa>
   b56d3:      	int3
   b56d4:      	mov	dword ptr [rax + 0x43], eax
   b56d7:      	int3
   b56d8:      	fstp	dword ptr [esi - 0x61269889]
   b56df:      	ja	 <L163>
   b56e1:      	call	 <OPENSSL_ia32cap_P+0xffffffffe87a6cb8>
   b56e6:      	mov	ebp, 0x888b8907
   b56ec:      	<unknown>
   b56ed:      	mov	dword ptr [rbx + 0x5b19e788], ecx
   b56f3:      	cmp	bh, ah
   b56f5:      	sbb	dword ptr [rbx + 0x38], ebx
   b56f8:      	jns	 <L164>
   b56fa:      	out	dx, al
   b56fb:      	fstp	tbyte ptr [rcx - 0x38]
   b56fe:      	out	dx, al
   b56ff:      	<unknown>
   b5705:      	jl	 <L165>
   b5707:      	jl	 <L166>
   b570a:      	psubsw	mm7, qword ptr [rdx + 2*rax + 0xf]
   b570f:      	jmp	 <OPENSSL_ia32cap_P+0xffffffffc8e8349c>
   b5714:      	clc
   b5715:      	test	byte ptr [rsi], bl
   b5717:      	leave
		...
   b5720:      	or	dword ptr [rax - 0x7ff67c7a], eax
   b5726:      	xchg	byte ptr [rbx + 0x48ed2b32], al
   b572c:      	xor	ch, byte ptr [rbx]
   b572e:      	in	eax, dx
   b572f:      	<unknown>
   b5731:      	adc	dword ptr [rax - 0x54], esi
   b5734:      	<unknown>
   b5735:      	adc	dword ptr [rax - 0x54], esi
   b5738:      	insb	byte ptr es:[rdi], dx
   b5739:      	pop	rdx
   b573a:      	jb	 <L167>
   b573c:      	insb	byte ptr es:[rdi], dx
   b573d:      	pop	rdx
   b573e:      	jb	 <L168>
   b5740:      	std
   b5741:      	<unknown>
   b5742:      	<unknown>
   b5744:      	std
   b5745:      	<unknown>
   b5746:      	<unknown>
   b5748:      	jne	 <OPENSSL_ia32cap_P+0xffffffff84d90616>
   b574e:      	cmp	byte ptr [rsi + 0x3d], dl
   b5751:      	scasb	al, byte ptr es:[rdi]
   b5752:      	cmp	rax, 0x361ed5ae
   b5759:      	sub	eax, 0x2d362739
   b575e:      	cmp	dword ptr [rdi], esp
   b5760:      	or	cl, byte ptr [rdi]
   b5762:      	fldenv	[rdx + rcx + 0xf]
   b5766:      	fldenv	[rax + 2*rbp + 0x5c]
   b576a:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b576b:      	and	dword ptr [rax + 0x5c], ebp
   b576e:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b576f:      	and	dword ptr [rbx - 0x642eaba5], ebx
   b5775:      	pop	rbx
   b5776:      	push	rsp
   b5777:      	shl	dword ptr [rsi + rsi]
   b577a:      	cmp	ah, byte ptr cs:[rsi + rsi]
   b577e:      	cmp	cl, byte ptr cs:[rdx + rcx]
   b5782:      	addr32		mov	cl, 0xc
   b5785:      	or	ah, byte ptr [rdi - 0x4f]
   b5788:      	xchg	eax, ebx
   b5789:      	push	rdi
<L167>:
   b578a:      	out	0xf, eax
   b578c:      	xchg	eax, ebx
   b578d:      	push	rdi
<L168>:
   b578e:      	out	0xf, eax
   b5790:      	mov	ah, -0x12
   b5792:      	xchg	eax, esi
   b5793:      	<unknown>
   b579a:      	xchg	eax, ecx
   b579b:      	sahf
   b579c:      	sbb	ebx, dword ptr [rbx - 0x3f7f616f]
   b57a2:      	<unknown>
   b57a5:      	rol	ch, 0x4f
   b57a8:      	<unknown>
   b57a9:      	fsub	qword ptr [rax]
   b57ab:      	movabs	byte ptr [0x694b775aa220dc61], al
   b57b4:      	pop	rdx
   b57b5:      	ja	 <L169>
   b57b7:      	imul	ebx, dword ptr [rdx + rdx], 0x121c161a
   b57be:      	sbb	dl, byte ptr [rsi]
   b57c0:      	loop	 <L170>
   b57c2:      	mov	edx, 0xba93e20a
   b57c7:      	or	al, al
   b57c9:      	movabs	al, byte ptr [0x223ce52aa0c0e52a]
   b57d2:      	loopne	 <L171>
   b57d4:      	cmp	al, 0x22
   b57d6:      	loopne	 <L172>
   b57d8:      	adc	bl, byte ptr [rbx]
   b57da:      	<unknown>
   b57db:      	sbb	eax, 0x1d171b12
   b57e0:      	<unknown>
   b57e1:      	or	dword ptr , ecx <OPENSSL_ia32cap_P+0xcd2be82>
   b57e7:      	or	esi, edx
   b57e9:      	mov	eax, edi
   b57eb:      	lodsd	eax, dword ptr [rsi]
   b57ec:      	repne		mov	eax, edi
   b57ef:      	lodsd	eax, dword ptr [rsi]
   b57f0:      	sub	eax, 0x2db9a8b6
   b57f5:      	mov	dh, -0x58
   b57f7:      	mov	ecx, 0xc8a91e14
   b57fc:      	adc	al, 0x1e
   b57fe:      	test	eax, 0x19f157c8
   b5803:      	test	dword ptr [rdi - 0xf], edx
   b5806:      	sbb	dword ptr [rbp + 0x4c0775af], eax
   b580c:      	scasd	eax, dword ptr es:[rdi]
   b580d:      	jne	 <L173>
   b580f:      	out	dx, al
   b5811:      	cdq
   b5812:      	fnstsw	word ptr [rbx - 0x44226612]
   b5818:      	movabs	dword ptr [-0x8029f805c029f81], eax
   b5821:      	add	dword ptr [rsi], esp
   b5823:      	lahf
   b5824:      	test	dword ptr [rcx], 0x725c9f26
   b582a:      	cmc
   b582b:      	mov	esp, 0xbcf5725c
   b5830:      	cmp	ax, bp
   b5834:      	cmp	ax, bp
   b5838:      	pop	rbx
   b5839:      	sti
   b583a:      	jle	 <L174>
   b583c:      	pop	rbx
   b583d:      	sti
   b583e:      	jle	 <L175>
   b5840:      	mov	eax, dword ptr [rbx + 0x29]
   b5843:      	jbe	 <L176>
   b5845:      	sub	dword ptr [r14 - 0x35], esi
   b5849:      	and	eax, esi
   b584b:      	fmul	st(3), st
   b584d:      	and	eax, esi
   b584f:      	fdiv	qword ptr [rsi - 0x49970313]
   b5855:      	in	eax, dx
   b5856:      	cld
   b5857:      	push	0x63f1e4b8
   b585c:      	mov	eax, 0xd763f1e4
   b5861:      	xor	esp, ebx
   b5863:      	retf	0x31d7
   b5866:      	fmul	st(2), st
   b5868:      	movsxd	eax, dword ptr [rbp - 0x7a9cbdf0]
   b586f:      	adc	byte ptr [rbx], dl
   b5871:      	xchg	eax, edi
   b5872:      	and	al, byte ptr [rax + 0x13]
   b5875:      	xchg	eax, edi
   b5876:      	and	al, byte ptr [rax - 0x7c]
   b5879:      	<unknown>
<L178>:
   b587b:      	and	byte ptr [rsi + 8*rax + 0x4a852011], al
   b5882:      	and	al, 0x7d
   b5884:      	test	dword ptr [rdx + 0x24], ecx
   b5887:      	jge	 <L177>
   b5889:      	mov	ebx, 0xbbd2f83d
   b588e:      	cmp	eax, 0x32f9aef8
   b5893:      	adc	dword ptr [rsi - 0x38eecd07], ebp
   b5899:      	sub	dword ptr [rcx - 0x5ed63893], esp
   b589f:      	insd	dword ptr es:[rdi], dx
   b58a0:      	sbb	eax, 0x1d4b2f9e
   b58a5:      	sahf
   b58a6:      	<unknown>
   b58a7:      	fdiv	qword ptr [r10 - 0x4d230cd0]
   b58ae:      	xor	bl, dh
   b58b0:      	or	eax, 0xdec5286
   b58b5:      	xchg	byte ptr [rdx - 0x14], dl
   b58b8:      	ja	 <L178>
   b58ba:      	jrcxz	 <L179>
   b58bc:      	ja	 <L180>
   b58be:      	jrcxz	 <L181>
   b58c0:      	sub	esi, dword ptr [rbx - 0x4cd493ea]
   b58c6:      	<unknown>
   b58c7:      	insb	byte ptr es:[rdi], dx
   b58c8:      	test	eax, 0xa999b970
   b58cd:      	jo	 <L182>
   b58cf:      	cdq
   b58d0:      	adc	dword ptr [rax + 2*rcx + 0x489411fa], edx
   b58d7:      	cli
   b58d8:      	jmp	 <OPENSSL_ia32cap_P+0xffffffffe910d3d2>
   b58de:      	and	ch, byte ptr fs:[rax - 0x573b7304]
   b58e5:      	cld
   b58e6:      	mov	esp, es
   b58e8:      	movabs	al, byte ptr [0x561a3ff0a01a3ff0]
   b58f1:      	jge	 <L183>
   b58f3:      	fcom	dword ptr [rsi + 0x7d]
   b58f6:      	sub	al, -0x28
   b58f8:      	and	dh, byte ptr [rbx]
   b58fa:      	nop
   b58fb:      	out	dx, eax
   b58fc:      	and	dh, byte ptr [rbx]
   b58fe:      	nop
   b58ff:      	out	dx, eax
   b5900:      	xchg	dword ptr [rcx + 0x4e], ecx
   b5903:      	mov	dword ptr [rdi - 0x2638b1b7], 0xd9c1d138
   b590d:      	cmp	cl, dl
   b590f:      	ror	dword ptr [rdx + 8*rcx - 0x3573015e], 0xa2
   b5917:      	<unknown>
   b591d:      	<unknown>
   b591e:      	or	esi, dword ptr [rsi]
   b5920:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b5921:      	cmc
   b5922:      	or	edi, 0xcf81f5a6
   b5928:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b5929:      	jp	 <L184>
   b592b:      	sub	byte ptr [rbp - 0x25d72186], ah
   b5931:      	mov	bh, -0x72
   b5933:      	fidiv	dword ptr es:[rdi - 0x52c0d972]
   b593a:      	mov	edi, 0xbfad3fa4
   b593f:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b5940:      	sub	al, 0x3a
   b5942:      	popfq
   b5943:      	in	al, 0x2c
   b5945:      	cmp	bl, byte ptr [rbp - 0x6d87af1c]
   b594b:      	or	eax, 0xd927850
   b5950:      	push	0x5f
   b5952:      	int3
<L187>:
   b5953:      	wait
   b5954:      	push	0x5f
   b5956:      	int3
<L188>:
   b5957:      	wait
   b5958:      	push	rsp
   b5959:      	jle	 <L185>
   b595b:      	<unknown>
   b5961:      	lea	edx, [rbx]
   b5963:      	ret	-0x720a
   b5966:      	adc	eax, edx
   b5968:      	nop
   b5969:      	fdivr	dword ptr [rax - 0x47276f18]
   b596f:      	call	 <OPENSSL_ia32cap_P+0x5ec0eb32>
   b5974:      	cmp	edi, esi
   b5977:      	pop	rsi
   b5978:      	<unknown>
   b5979:      	ret
   b597a:      	scasd	eax, dword ptr es:[rdi]
   b597b:      	cmc
   b597c:      	<unknown>
   b597d:      	ret
   b597e:      	scasd	eax, dword ptr es:[rdi]
   b597f:      	cmc
   b5980:      	lahf
   b5981:      	pop	rbp
   b5982:      	cmp	byte ptr [rsi - 0x417fa261], 0x69
   b5989:      	rcl	byte ptr [rbx - 0x6c2f9684]
   b598f:      	jl	 <L186>
   b5991:      	test	rax, -0x56d22a91
   b5998:      	iretd
   b5999:      	and	eax, 0x25cfb312
   b599e:      	adc	dh, byte ptr [rbx + 0x3b99acc8]
   b59a4:      	enter	-0x6654, 0x3b
   b59a8:      	adc	byte ptr [rax], bl
   b59aa:      	jge	 <L187>
   b59ac:      	adc	byte ptr [rax], bl
   b59ae:      	jge	 <L188>
   b59b0:      	call	 <OPENSSL_ia32cap_P+0xffffffffe83815e1>
   b59b5:      	pushfq
   b59b6:      	movsxd	ebp, dword ptr [rsi - 0x25]
   b59b9:      	cmp	edi, dword ptr [rbx - 0x44c42485]
   b59bf:      	jnp	 <L189>
   b59c1:      	js	 <L190>
   b59c4:      	int	0x26
   b59c6:      	js	 <L191>
   b59c8:      	outsb	dx, byte ptr [rsi]
   b59c9:      	pop	rcx
   b59ca:      	sbb	ah, dh
   b59cc:      	outsb	dx, byte ptr [rsi]
<L190>:
   b59cd:      	pop	rcx
   b59ce:      	sbb	ah, dh
   b59d0:      	in	al, dx
<L191>:
   b59d1:      	<unknown>
   b59d2:      	mov	bh, 0x1
   b59d4:      	in	al, dx
   b59d5:      	<unknown>
   b59d6:      	mov	bh, 0x1
   b59d8:      	or	dword ptr [rdi - 0x66], -0x58
   b59dc:      	or	dword ptr [rdi - 0x66], -0x58
   b59e0:      	out	0x95, al
   b59e2:      	outsb	dx, byte ptr [rsi]
   b59e3:      	out	0x95, al
   b59e6:      	outsb	dx, byte ptr [rsi]
   b59e7:      	stosb	byte ptr es:[rdi], al
   b59e9:      	jmp	rsi
   b59eb:      	jle	 <L192>
   b59ed:      	jmp	rsi
   b59ef:      	jle	 <L193>
   b59f1:      	mov	esp, 0xbc2108cf
<L194>:
   b59f6:      	iretd
   b59f7:      	or	bh, ch
   b59f9:      	adc	eax, 0x15efe6e8
   b59fe:      	call	 <OPENSSL_ia32cap_P+0xffffffff9bb16d79>
   b5a03:      	fnstcw	word ptr [rdx + 0x4ad99be7]
   b5a09:      	outsd	dx, dword ptr [rsi]
   b5a0a:      	<unknown>
   b5a0c:      	outsd	dx, dword ptr [rsi]
   b5a0e:      	<unknown>
   b5a10:      	<unknown>
   b5a11:      	lahf
<L193>:
   b5a12:      	or	esp, edx
   b5a14:      	<unknown>
   b5a15:      	lahf
   b5a16:      	or	esp, edx
   b5a18:      	sub	dword ptr [rax - 0x4fd62984], esi
   b5a1e:      	jl	 <L194>
   b5a20:      	xor	dword ptr [rdx + 4*rsi - 0x4d5bce51], esp
   b5a27:      	scasd	eax, dword ptr es:[rdi]
   b5a28:      	sub	bh, byte ptr [rdi]
   b5a2a:      	and	esi, dword ptr [rcx]
   b5a2c:      	sub	bh, byte ptr [rdi]
   b5a2e:      	and	esi, dword ptr [rcx]
   b5a30:      	<unknown>
   b5a36:      	xchg	eax, esp
   b5a37:      	xor	byte ptr , dh <OPENSSL_ia32cap_P+0x358a196f>
   b5a3d:      	movabs	byte ptr [0x4e7437bc4e74c066], al
   b5a46:      	mov	esp, 0xca82fc37
   b5a4b:      	cmpsb	byte ptr [rsi], byte ptr es:[rdi]
   b5a4c:      	cld
   b5a4d:      	<unknown>
   b5a4e:      	retf	-0x1f5a
   b5a51:      	nop
   b5a52:      	<unknown>
   b5a58:      	xor	esp, dword ptr [rdi - 0x58ccea28]
<L200>:
   b5a5e:      	fcom	dword ptr  <OPENSSL_ia32cap_P+0x4a61b7e5>
   b5a64:      	<unknown>
   b5a65:      	add	al, -0x68
   b5a67:      	in	al, dx
   b5a6a:      	<unknown>
   b5a6c:      	in	al, dx
   b5a6e:      	<unknown>
   b5a70:      	jg	 <L195>
   b5a72:      	push	rax
   b5a73:      	<unknown>
   b5a74:      	jg	 <L196>
   b5a76:      	push	rax
   b5a77:      	<unknown>
   b5a78:      	<unknown>
   b5a79:      	xchg	eax, ecx
   b5a7a:      	imul	byte ptr [rdi]
   b5a7c:      	<unknown>
   b5a7d:      	xchg	eax, ecx
   b5a7e:      	imul	byte ptr [rdi]
   b5a80:      	jbe	 <L197>
   b5a82:      	<unknown>
   b5a83:      	lea	esi, [rsi + 0x4d]
   b5a86:      	<unknown>
   b5a87:      	lea	eax, [rbx - 0x11]
   b5a8a:      	mov	al, 0x4d
   b5a8c:      	out	dx, eax
   b5a8e:      	mov	al, 0x4d
   b5a90:      	int3
   b5a91:      	stosb	byte ptr es:[rdi], al
   b5a92:      	push	r12
   b5a94:      	int3
   b5a95:      	stosb	byte ptr es:[rdi], al
   b5a96:      	push	r12
   b5a98:      	in	al, 0x96
   b5a9a:      	add	al, -0x21
   b5a9c:      	in	al, 0x96
   b5a9e:      	add	al, -0x21
   b5aa0:      	sahf
   b5aa1:      	<unknown>
   b5aa7:      	jrcxz	 <L198>
   b5aa9:      	push	-0x78
   b5aab:      	sbb	ecx, dword ptr [rdx + 2*rbp - 0x78]
   b5aaf:      	sbb	eax, ecx
   b5ab1:      	sub	al, 0x1f
   b5ab3:      	mov	eax, 0xb81f2cc1
   b5ab8:      	push	rcx
   b5abb:      	jg	 <L199>
   b5abd:      	push	rcx
   b5abf:      	jg	 <L200>
   b5ac1:      	pop	rsi
   b5ac2:      	<unknown>
   b5ac3:      	add	al, -0x63
   b5ac5:      	pop	rsi
   b5ac6:      	<unknown>
   b5ac7:      	add	al, 0x1
   b5ac9:      	<unknown>
<L197>:
   b5acf:      	pop	rbp
   b5ad0:      	cli
   b5ad1:      	xchg	dword ptr [rbx + 2*rsi - 0x6], esi
   b5ad5:      	xchg	dword ptr [rbx + 2*rsi - 0x5], esi
   b5ad9:      	or	eax, dword ptr [rcx + 0x2e]
   b5adc:      	sti
   b5add:      	or	eax, dword ptr [rcx + 0x2e]
   b5ae0:      	mov	bl, 0x67
   b5ae2:      	sbb	eax, 0x1d67b35a
   b5ae7:      	pop	rdx
   b5ae8:      	xchg	eax, edx
   b5ae9:      	fcmovnbe	st, st(2)
   b5aeb:      	push	rdx
   b5aec:      	xchg	eax, edx
   b5aed:      	fcmovnbe	st, st(2)
   b5aef:      	push	rdx
   b5af0:      	jmp	 <OPENSSL_ia32cap_P+0xffffffffe8fd0995>
<L198>:
   b5af5:      	adc	byte ptr [rsi + 0x33], dl
   b5af8:      	insd	dword ptr es:[rdi], dx
   b5af9:      	<unknown>
   b5afa:      	adc	r13d, dword ptr [r13 - 0x2a]
   b5afe:      	adc	r11d, dword ptr [r10 - 0x65739e29]
   b5b05:      	xlatb
   b5b06:      	<unknown>
   b5b07:      	<unknown>
   b5b09:      	movabs	eax, dword ptr [-0x7a685f35ec885f4]
   b5b12:      	adc	al, -0x72
   b5b14:      	pop	rcx
   b5b15:      	clc
   b5b16:      	adc	al, -0x72
   b5b18:      	jmp	 <L201>
   b5b1a:      	cmp	al, -0x77
   b5b1c:      	jmp	 <L202>
   b5b1e:      	cmp	al, -0x77
   b5b20:      	<unknown>
   b5b21:      	test	eax, 0xa9ceee27
   b5b26:      	<unknown>
   b5b27:      	out	dx, al
   b5b28:      	mov	bh, 0x61
   b5b2a:      	leave
   b5b2b:      	xor	eax, 0x35c961b7
   b5b30:      	loope	 <L203>
   b5b32:      	in	eax, 0xed
   b5b34:      	loope	 <L204>
   b5b36:      	in	eax, 0xed
   b5b38:      	jp	 <L205>
   b5b3a:      	mov	cl, 0x3c
   b5b3c:      	jp	 <L206>
   b5b3e:      	mov	cl, 0x3c
   b5b40:      	pushfq
   b5b41:      	rcr	bh, cl
   b5b43:      	pop	rcx
   b5b44:      	pushfq
   b5b45:      	rcr	bh, cl
   b5b47:      	pop	rcx
   b5b48:      	push	rbp
   b5b49:      	repne		jae	 <L207>
   b5b4c:      	push	rbp
   b5b4d:      	repne		jae	 <L208>
   b5b50:      	sbb	byte ptr [rsi + 8*rcx], dl
   b5b53:      	jns	 <L209>
   b5b55:      	adc	al, -0x32
   b5b57:      	jns	 <L210>
   b5b59:      	<unknown>
   b5b5b:      	mov	edi, 0xbf37c773
   b5b60:      	push	rbx
   b5b61:      	<unknown>
   b5b63:      	<unknown>
   b5b64:      	push	rbx
   b5b65:      	<unknown>
   b5b67:      	<unknown>
   b5b68:      	pop	rdi
   b5b69:      	std
   b5b6a:      	stosb	byte ptr es:[rdi], al
   b5b6b:      	pop	rbx
   b5b6c:      	pop	rdi
<L209>:
   b5b6d:      	std
   b5b6e:      	stosb	byte ptr es:[rdi], al
   b5b6f:      	pop	rbx
   b5b70:      	fistp	qword ptr  <OPENSSL_ia32cap_P+0x3da8c875>
   b5b76:      	outsd	dx, dword ptr [rsi]
   b5b77:      	adc	al, 0x78
   b5b79:      	fild	dword ptr [rsi - 0x7924bb88]
   b5b80:      	retf	-0xc51
   b5b83:      	or	edx, 0xb981f3af
   b5b89:      	push	0x68b93ec4
   b5b8e:      	<unknown>
   b5b91:      	and	al, 0x34
   b5b93:      	sub	al, 0x38
   b5b95:      	and	al, 0x34
   b5b97:      	sub	al, -0x3e
   b5b99:      	movabs	dword ptr [0x1d165f40a3c25f40], eax
   b5ba2:      	ret
   b5ba3:      	jb	 <L211>
   b5ba5:      	sbb	eax, 0xe2bc72c3
   b5baa:      	and	eax, 0x25e2bc0c
   b5baf:      	or	al, 0x28
   b5bb1:      	cmp	al, 0x49
   b5bb3:      	mov	ebp, dword ptr [rax]
   b5bb5:      	cmp	al, 0x49
<L216>:
   b5bb7:      	mov	edi, edi
   b5bb9:      	or	eax, 0xdff4195
   b5bbe:      	xchg	eax, ebp
   b5bbf:      	cmp	dword ptr [r8 - 0x57c68eff], ebp
   b5bc6:      	add	dword ptr [rcx + 0x8], esi
<L214>:
   b5bc9:      	or	al, -0x4d
   b5bcb:      	fimul	word ptr [rax]
   b5bcd:      	or	al, -0x4d
   b5bcf:      	<unknown>
   b5bd1:      	mov	ah, -0x1c
   b5bd3:      	pushfq
   b5bd4:      	fdiv	dword ptr [rsp + 8*riz - 0x3ea99b64]
   b5bdb:      	nop
   b5bdc:      	push	rsi
   b5bde:      	rcl	dword ptr [rax + 0x6184cb7b], 0x7b
   b5be5:      	retf
   b5be6:      	test	byte ptr [rcx - 0x2b], ah
   b5be9:      	xor	dh, byte ptr [rsi - 0x49cd2a90]
   b5bef:      	jo	 <L212>
   b5bf1:      	insb	byte ptr es:[rdi], dx
   b5bf2:      	pop	rsp
   b5bf3:      	je	 <L213>
<L215>:
   b5bf5:      	insb	byte ptr es:[rdi], dx
   b5bf6:      	pop	rsp
   b5bf7:      	je	 <L214>
   b5bf9:      	mov	eax, 0xb8d04257
   b5bfe:      	push	rdi
   b5bff:      	push	rdx
   b5c01:      	or	dword ptr [rdx - 0x2b], ebp
   b5c04:      	xor	byte ptr [rsi], dh
   b5c06:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b5c07:      	cmp	byte ptr [rdi - 0x7e615cc0], bh
   b5c0d:      	rep		xlatb
   b5c0f:      	sti
   b5c10:      	jl	 <L215>
   b5c12:      	cmp	dword ptr [rdx - 0x7800d065], eax
   b5c18:      	xor	al, -0x72
   b5c1a:      	<unknown>
   b5c1f:      	retf
   b5c20:      	push	rsp
   b5c21:      	jnp	 <L216>
   b5c23:      	xor	ah, byte ptr [rsi - 0x11c2dc3e]
   b5c29:      	xchg	rax, rbp
   b5c2b:      	or	eax, dword ptr [rdx - 0x6]
   b5c2e:      	ret
   b5c2f:      	or	byte ptr [rsi], r13b
   b5c32:      	movabs	eax, dword ptr [-0x5da4894ddb26d79a]
   b5c3b:      	insd	dword ptr es:[rdi], dx
<L213>:
   b5c3d:      	mov	edx, ecx
   b5c3f:      	and	eax, 0x64f6f872
   b5c44:      	xchg	byte ptr [rax - 0x68], ch
   b5c47:      	<unknown>
   b5c48:      	<unknown>
   b5c49:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b5c4a:      	pop	rsp
   b5c4b:      	int3
   b5c4c:      	pop	rbp
   b5c4d:      	mov	dh, -0x6e
   b5c50:      	insb	byte ptr es:[rdi], dx
   b5c51:      	jo	 <L217>
   b5c53:      	push	rax
   b5c54:      	std
   b5c55:      	in	eax, dx
   b5c56:      	mov	ecx, 0x46155eda
   b5c5b:      	push	rdi
   b5c5c:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b5c5d:      	lea	ebx, [rbp - 0x54276f7c]
   b5c63:      	add	byte ptr [rsp + 4*rdi - 0x1b08f52d], cl
   b5c6a:      	pop	rax
   b5c6b:      	add	eax, 0x645b3b8
   b5c70:      	shr	byte ptr [rsi + rbx]
   b5c73:      	<unknown>
   b5c77:      	add	al, cl
   b5c79:      	scasd	eax, dword ptr es:[rdi]
   b5c7a:      	mov	ebp, 0x8a130103
   b5c7f:      	imul	edi, dword ptr [rdx], -0x6f
   b5c82:      	adc	dword ptr [rcx + 0x4f], eax
   b5c85:      	addr32		fsub	st(2), st
   b5c88:      	xchg	eax, edi
   b5c89:      	repne		iretd
   b5c8b:      	<unknown>
   b5c8c:      	lock
   b5c8d:      	mov	ah, -0x1a
   b5c8f:      	jae	 <L218>
   b5c91:      	lodsb	al, byte ptr [rsi]
   b5c92:      	je	 <L219>
   b5c94:      	out	0xad, eax
   b5c96:      	xor	eax, 0x37f9e285
<L217>:
   b5c9b:      	call	 <OPENSSL_ia32cap_P+0x6ea92a4c>
   b5ca0:      	<unknown>
   b5ca2:      	sbb	dh, byte ptr [rcx + 0x1d]
   b5ca5:      	sub	ebp, eax
   b5ca7:      	mov	dword ptr [rdi - 0x49], ebp
   b5caa:      	<unknown>
   b5cb0:      	cld
   b5cb1:      	push	rsi
   b5cb2:      	<unknown>
<L219>:
   b5cb6:      	jns	 <L220>
   b5cb8:      	<unknown>
   b5cb9:      	fcmovnb	st, st(0)
   b5cbb:      	<unknown>
   b5cbe:      	pop	rdx
   b5cbf:      	hlt
   b5cc0:      	<unknown>
   b5cc1:      	<unknown>
   b5cc7:      	xor	dword ptr [rcx + 0x27591012], esi
   b5ccd:      	sub	ah, 0x5f
   b5cd0:      	<unknown>
   b5cd1:      	push	rcx
   b5cd2:      	jg	 <L221>
   b5cd4:      	sbb	dword ptr [rbp - 0x1ad2f2b6], esi
   b5cda:      	jp	 <L222>
   b5cdc:      	xchg	eax, ebx
   b5cdd:      	leave
   b5cde:      	pushfq
   b5cdf:      	out	dx, eax
   b5ce0:      	movabs	al, byte ptr [-0x374f0ad551b2c420]
   b5ce9:      	jmp	 <L223>
   b5ceb:      	cmp	al, -0x7d
   b5ced:      	push	rbx
   b5cee:      	cdq
   b5cef:      	<unknown>
   b5cf0:      	<unknown>
   b5cf1:      	sub	eax, dword ptr [rsi + 2*rdi]
   b5cf4:      	mov	edx, 0xe126d677
   b5cf9:      	imul	edx, dword ptr [rbx + 2*riz], 0x7d0c2155
   b5d00:      	add	byte ptr [rax - 0x7f7f7f80], -0x80
   b5d07:      	cmp	dh, -0x2
   b5d0a:      	<unknown>
   b5d0c:      	<unknown>
   b5d0e:      	<unknown>
   b5d10:      	sbb	ebx, dword ptr [rbx]
   b5d12:      	sbb	ebx, dword ptr [rbx]
   b5d14:      	sbb	ebx, dword ptr [rbx]
   b5d16:      	sbb	ebx, dword ptr [rbx]
		...
   b5d20:      	push	rdx
   b5d21:      	or	dword ptr [rdx - 0x2b], ebp
   b5d24:      	xor	byte ptr [rsi], dh
   b5d26:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b5d27:      	cmp	byte ptr [rdi - 0x7e615cc0], bh
   b5d2d:      	rep		xlatb
   b5d2f:      	sti
   b5d30:      	jl	 <L224>
   b5d32:      	cmp	dword ptr [rdx - 0x7800d065], eax
   b5d38:      	xor	al, -0x72
   b5d3a:      	<unknown>
   b5d3f:      	retf
   b5d40:      	push	rsp
   b5d41:      	jnp	 <L225>
   b5d43:      	xor	ah, byte ptr [rsi - 0x11c2dc3e]
   b5d49:      	xchg	rax, rbp
   b5d4b:      	or	eax, dword ptr [rdx - 0x6]
   b5d4e:      	ret
   b5d4f:      	or	byte ptr [rsi], r13b
   b5d52:      	movabs	eax, dword ptr [-0x5da4894ddb26d79a]
   b5d5b:      	insd	dword ptr es:[rdi], dx
   b5d5d:      	mov	edx, ecx
   b5d5f:      	and	eax, 0x64f6f872
   b5d64:      	xchg	byte ptr [rax - 0x68], ch
   b5d67:      	<unknown>
   b5d68:      	<unknown>
   b5d69:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b5d6a:      	pop	rsp
   b5d6b:      	int3
   b5d6c:      	pop	rbp
   b5d6d:      	mov	dh, -0x6e
   b5d70:      	insb	byte ptr es:[rdi], dx
   b5d71:      	jo	 <L226>
   b5d73:      	push	rax
   b5d74:      	std
   b5d75:      	in	eax, dx
   b5d76:      	mov	ecx, 0x46155eda
   b5d7b:      	push	rdi
   b5d7c:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b5d7d:      	lea	ebx, [rbp - 0x54276f7c]
   b5d83:      	add	byte ptr [rsp + 4*rdi - 0x1b08f52d], cl
   b5d8a:      	pop	rax
   b5d8b:      	add	eax, 0x645b3b8
   b5d90:      	shr	byte ptr [rsi + rbx]
   b5d93:      	<unknown>
   b5d97:      	add	al, cl
   b5d99:      	scasd	eax, dword ptr es:[rdi]
   b5d9a:      	mov	ebp, 0x8a130103
   b5d9f:      	imul	edi, dword ptr [rdx], -0x6f
   b5da2:      	adc	dword ptr [rcx + 0x4f], eax
   b5da5:      	addr32		fsub	st(2), st
   b5da8:      	xchg	eax, edi
   b5da9:      	repne		iretd
   b5dab:      	<unknown>
   b5dac:      	lock
   b5dad:      	mov	ah, -0x1a
   b5daf:      	jae	 <L227>
   b5db1:      	lodsb	al, byte ptr [rsi]
   b5db2:      	je	 <L228>
   b5db4:      	out	0xad, eax
   b5db6:      	xor	eax, 0x37f9e285
<L226>:
   b5dbb:      	call	 <OPENSSL_ia32cap_P+0x6ea92b6c>
   b5dc0:      	<unknown>
   b5dc2:      	sbb	dh, byte ptr [rcx + 0x1d]
   b5dc5:      	sub	ebp, eax
   b5dc7:      	mov	dword ptr [rdi - 0x49], ebp
   b5dca:      	<unknown>
   b5dd0:      	cld
   b5dd1:      	push	rsi
   b5dd2:      	<unknown>
<L228>:
   b5dd6:      	jns	 <L229>
   b5dd8:      	<unknown>
   b5dd9:      	fcmovnb	st, st(0)
   b5ddb:      	<unknown>
   b5dde:      	pop	rdx
   b5ddf:      	hlt
   b5de0:      	<unknown>
   b5de1:      	<unknown>
   b5de7:      	xor	dword ptr [rcx + 0x27591012], esi
   b5ded:      	sub	ah, 0x5f
   b5df0:      	<unknown>
   b5df1:      	push	rcx
   b5df2:      	jg	 <L230>
   b5df4:      	sbb	dword ptr [rbp - 0x1ad2f2b6], esi
   b5dfa:      	jp	 <L231>
   b5dfc:      	xchg	eax, ebx
   b5dfd:      	leave
   b5dfe:      	pushfq
   b5dff:      	out	dx, eax
   b5e00:      	movabs	al, byte ptr [-0x374f0ad551b2c420]
   b5e09:      	jmp	 <L232>
   b5e0b:      	cmp	al, -0x7d
   b5e0d:      	push	rbx
   b5e0e:      	cdq
   b5e0f:      	<unknown>
   b5e10:      	<unknown>
   b5e11:      	sub	eax, dword ptr [rsi + 2*rdi]
   b5e14:      	mov	edx, 0xe126d677
   b5e19:      	imul	edx, dword ptr [rbx + 2*riz], 0x7d0c2155
   b5e20:      	add	byte ptr [rax - 0x7f7f7f80], -0x80
   b5e27:      	cmp	dh, -0x2
   b5e2a:      	<unknown>
   b5e2c:      	<unknown>
   b5e2e:      	<unknown>
   b5e30:      	sbb	ebx, dword ptr [rbx]
   b5e32:      	sbb	ebx, dword ptr [rbx]
   b5e34:      	sbb	ebx, dword ptr [rbx]
   b5e36:      	sbb	ebx, dword ptr [rbx]
		...
   b5e40:      	push	rdx
   b5e41:      	or	dword ptr [rdx - 0x2b], ebp
   b5e44:      	xor	byte ptr [rsi], dh
   b5e46:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b5e47:      	cmp	byte ptr [rdi - 0x7e615cc0], bh
   b5e4d:      	rep		xlatb
   b5e4f:      	sti
   b5e50:      	jl	 <L233>
   b5e52:      	cmp	dword ptr [rdx - 0x7800d065], eax
   b5e58:      	xor	al, -0x72
   b5e5a:      	<unknown>
   b5e5f:      	retf
   b5e60:      	push	rsp
   b5e61:      	jnp	 <L234>
   b5e63:      	xor	ah, byte ptr [rsi - 0x11c2dc3e]
   b5e69:      	xchg	rax, rbp
   b5e6b:      	or	eax, dword ptr [rdx - 0x6]
   b5e6e:      	ret
   b5e6f:      	or	byte ptr [rsi], r13b
   b5e72:      	movabs	eax, dword ptr [-0x5da4894ddb26d79a]
   b5e7b:      	insd	dword ptr es:[rdi], dx
   b5e7d:      	mov	edx, ecx
   b5e7f:      	and	eax, 0x64f6f872
   b5e84:      	xchg	byte ptr [rax - 0x68], ch
   b5e87:      	<unknown>
   b5e88:      	<unknown>
   b5e89:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b5e8a:      	pop	rsp
   b5e8b:      	int3
   b5e8c:      	pop	rbp
   b5e8d:      	mov	dh, -0x6e
   b5e90:      	insb	byte ptr es:[rdi], dx
   b5e91:      	jo	 <L235>
   b5e93:      	push	rax
   b5e94:      	std
   b5e95:      	in	eax, dx
   b5e96:      	mov	ecx, 0x46155eda
   b5e9b:      	push	rdi
   b5e9c:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b5e9d:      	lea	ebx, [rbp - 0x54276f7c]
   b5ea3:      	add	byte ptr [rsp + 4*rdi - 0x1b08f52d], cl
   b5eaa:      	pop	rax
   b5eab:      	add	eax, 0x645b3b8
   b5eb0:      	shr	byte ptr [rsi + rbx]
   b5eb3:      	<unknown>
   b5eb7:      	add	al, cl
   b5eb9:      	scasd	eax, dword ptr es:[rdi]
   b5eba:      	mov	ebp, 0x8a130103
   b5ebf:      	imul	edi, dword ptr [rdx], -0x6f
   b5ec2:      	adc	dword ptr [rcx + 0x4f], eax
   b5ec5:      	addr32		fsub	st(2), st
   b5ec8:      	xchg	eax, edi
   b5ec9:      	repne		iretd
   b5ecb:      	<unknown>
   b5ecc:      	lock
   b5ecd:      	mov	ah, -0x1a
   b5ecf:      	jae	 <L236>
   b5ed1:      	lodsb	al, byte ptr [rsi]
   b5ed2:      	je	 <L237>
   b5ed4:      	out	0xad, eax
   b5ed6:      	xor	eax, 0x37f9e285
<L235>:
   b5edb:      	call	 <OPENSSL_ia32cap_P+0x6ea92c8c>
   b5ee0:      	<unknown>
   b5ee2:      	sbb	dh, byte ptr [rcx + 0x1d]
   b5ee5:      	sub	ebp, eax
   b5ee7:      	mov	dword ptr [rdi - 0x49], ebp
   b5eea:      	<unknown>
   b5ef0:      	cld
   b5ef1:      	push	rsi
   b5ef2:      	<unknown>
<L237>:
   b5ef6:      	jns	 <L238>
   b5ef8:      	<unknown>
   b5ef9:      	fcmovnb	st, st(0)
   b5efb:      	<unknown>
   b5efe:      	pop	rdx
   b5eff:      	hlt
   b5f00:      	<unknown>
   b5f01:      	<unknown>
   b5f07:      	xor	dword ptr [rcx + 0x27591012], esi
   b5f0d:      	sub	ah, 0x5f
   b5f10:      	<unknown>
   b5f11:      	push	rcx
   b5f12:      	jg	 <L239>
   b5f14:      	sbb	dword ptr [rbp - 0x1ad2f2b6], esi
   b5f1a:      	jp	 <L240>
   b5f1c:      	xchg	eax, ebx
   b5f1d:      	leave
   b5f1e:      	pushfq
   b5f1f:      	out	dx, eax
   b5f20:      	movabs	al, byte ptr [-0x374f0ad551b2c420]
   b5f29:      	jmp	 <L241>
   b5f2b:      	cmp	al, -0x7d
   b5f2d:      	push	rbx
   b5f2e:      	cdq
   b5f2f:      	<unknown>
   b5f30:      	<unknown>
   b5f31:      	sub	eax, dword ptr [rsi + 2*rdi]
   b5f34:      	mov	edx, 0xe126d677
   b5f39:      	imul	edx, dword ptr [rbx + 2*riz], 0x7d0c2155
   b5f40:      	add	byte ptr [rax - 0x7f7f7f80], -0x80
   b5f47:      	cmp	dh, -0x2
   b5f4a:      	<unknown>
   b5f4c:      	<unknown>
   b5f4e:      	<unknown>
   b5f50:      	sbb	ebx, dword ptr [rbx]
   b5f52:      	sbb	ebx, dword ptr [rbx]
   b5f54:      	sbb	ebx, dword ptr [rbx]
   b5f56:      	sbb	ebx, dword ptr [rbx]
		...
   b5f60:      	push	rdx
   b5f61:      	or	dword ptr [rdx - 0x2b], ebp
   b5f64:      	xor	byte ptr [rsi], dh
   b5f66:      	movsd	dword ptr es:[rdi], dword ptr [rsi]
   b5f67:      	cmp	byte ptr [rdi - 0x7e615cc0], bh
   b5f6d:      	rep		xlatb
   b5f6f:      	sti
   b5f70:      	jl	 <L242>
   b5f72:      	cmp	dword ptr [rdx - 0x7800d065], eax
   b5f78:      	xor	al, -0x72
   b5f7a:      	<unknown>
   b5f7f:      	retf
   b5f80:      	push	rsp
   b5f81:      	jnp	 <L243>
   b5f83:      	xor	ah, byte ptr [rsi - 0x11c2dc3e]
   b5f89:      	xchg	rax, rbp
   b5f8b:      	or	eax, dword ptr [rdx - 0x6]
   b5f8e:      	ret
   b5f8f:      	or	byte ptr [rsi], r13b
   b5f92:      	movabs	eax, dword ptr [-0x5da4894ddb26d79a]
   b5f9b:      	insd	dword ptr es:[rdi], dx
   b5f9d:      	mov	edx, ecx
   b5f9f:      	and	eax, 0x64f6f872
   b5fa4:      	xchg	byte ptr [rax - 0x68], ch
   b5fa7:      	<unknown>
   b5fa8:      	<unknown>
   b5fa9:      	movsb	byte ptr es:[rdi], byte ptr [rsi]
   b5faa:      	pop	rsp
   b5fab:      	int3
   b5fac:      	pop	rbp
   b5fad:      	mov	dh, -0x6e
   b5fb0:      	insb	byte ptr es:[rdi], dx
   b5fb1:      	jo	 <L244>
   b5fb3:      	push	rax
   b5fb4:      	std
   b5fb5:      	in	eax, dx
   b5fb6:      	mov	ecx, 0x46155eda
   b5fbb:      	push	rdi
   b5fbc:      	cmpsd	dword ptr [rsi], dword ptr es:[rdi]
   b5fbd:      	lea	ebx, [rbp - 0x54276f7c]
   b5fc3:      	add	byte ptr [rsp + 4*rdi - 0x1b08f52d], cl
   b5fca:      	pop	rax
   b5fcb:      	add	eax, 0x645b3b8
   b5fd0:      	shr	byte ptr [rsi + rbx]
   b5fd3:      	<unknown>
   b5fd7:      	add	al, cl
   b5fd9:      	scasd	eax, dword ptr es:[rdi]
   b5fda:      	mov	ebp, 0x8a130103
   b5fdf:      	imul	edi, dword ptr [rdx], -0x6f
   b5fe2:      	adc	dword ptr [rcx + 0x4f], eax
   b5fe5:      	addr32		fsub	st(2), st
   b5fe8:      	xchg	eax, edi
   b5fe9:      	repne		iretd
   b5feb:      	<unknown>
   b5fec:      	lock
   b5fed:      	mov	ah, -0x1a
   b5fef:      	jae	 <L245>
   b5ff1:      	lodsb	al, byte ptr [rsi]
   b5ff2:      	je	 <L246>
   b5ff4:      	out	0xad, eax
   b5ff6:      	xor	eax, 0x37f9e285
<L244>:
   b5ffb:      	call	 <OPENSSL_ia32cap_P+0x6ea92dac>
   b6000:      	<unknown>
   b6002:      	sbb	dh, byte ptr [rcx + 0x1d]
   b6005:      	sub	ebp, eax
   b6007:      	mov	dword ptr [rdi - 0x49], ebp
   b600a:      	<unknown>
   b6010:      	cld
   b6011:      	push	rsi
   b6012:      	<unknown>
<L246>:
   b6016:      	jns	 <L247>
   b6018:      	<unknown>
   b6019:      	fcmovnb	st, st(0)
   b601b:      	<unknown>
   b601e:      	pop	rdx
   b601f:      	hlt
   b6020:      	<unknown>
   b6021:      	<unknown>
   b6027:      	xor	dword ptr [rcx + 0x27591012], esi
   b602d:      	sub	ah, 0x5f
   b6030:      	<unknown>
   b6031:      	push	rcx
   b6032:      	jg	 <L248>
   b6034:      	sbb	dword ptr [rbp - 0x1ad2f2b6], esi
   b603a:      	jp	 <L249>
   b603c:      	xchg	eax, ebx
   b603d:      	leave
   b603e:      	pushfq
   b603f:      	out	dx, eax
   b6040:      	movabs	al, byte ptr [-0x374f0ad551b2c420]
   b6049:      	jmp	 <L250>
   b604b:      	cmp	al, -0x7d
   b604d:      	push	rbx
   b604e:      	cdq
   b604f:      	<unknown>
   b6050:      	<unknown>
   b6051:      	sub	eax, dword ptr [rsi + 2*rdi]
   b6054:      	mov	edx, 0xe126d677
   b6059:      	imul	edx, dword ptr [rbx + 2*riz], 0x7d0c2155
   b6060:      	add	byte ptr [rax - 0x7f7f7f80], -0x80
   b6067:      	cmp	dh, -0x2
   b606a:      	<unknown>
   b606c:      	<unknown>
   b606e:      	<unknown>
   b6070:      	sbb	ebx, dword ptr [rbx]
   b6072:      	sbb	ebx, dword ptr [rbx]
   b6074:      	sbb	ebx, dword ptr [rbx]
   b6076:      	sbb	ebx, dword ptr [rbx]
		...
   b6080:      	push	r11
   b6083:      	and	byte ptr [rsi + 0x6f], ah
   b6086:      	jb	 <L251>
   b6088:      	js	 <AES_cfb128_encrypt+0x2>
   b608a:      	pop	rdi
   b608c:      	xor	al, 0x2c
   b608f:      	and	byte ptr [rbx + 0x52], al
   b6092:      	pop	rcx
   b6093:      	push	rax
   b6094:      	push	rsp
   b6095:      	push	r11
   b609a:      	and	byte ptr [rdx + 0x79], ah
   b609d:      	and	byte ptr [rcx + 2*riz], bh
   b60a0:      	jo	 <AES_cfb8_encrypt+0x12>
   b60a2:      	jb	 <AES_cfb8_encrypt+0x13>
   b60a4:      	outsd	dx, dword ptr [rsi]
   b60a6:      	jo	 <AES_cfb8_encrypt+0xd>
<L251>:
   b60a8:      	outsb	dx, byte ptr [rsi]
   b60a9:      	jae	 <AES_cfb8_encrypt+0x1e>
   b60ab:      	insb	byte ptr es:[rdi], dx
   b60ac:      	outsd	dx, dword ptr cs:[rsi]
   b60ae:      	jb	 <AES_cfb8_encrypt+0x17>
   b60b0:      	add	byte ptr ds:[rsi + 0x2e], ah
   b60b4:      	nop	dword ptr [rax + rax]
   b60bc:      	nop	dword ptr [rax]
